# Generated by Django 4.2.6 on 2023-10-13 14:33

import creme.creme_core.models.deletion
import creme.creme_core.models.fields
import creme.documents.models.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("documents", "0001_initial"),
        ("creme_core", "0005_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=100, verbose_name="Name"),
                ),
                ("address", models.TextField(blank=True, verbose_name="Address")),
                (
                    "po_box",
                    models.CharField(blank=True, max_length=50, verbose_name="PO box"),
                ),
                (
                    "zipcode",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Zip code"
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="City"),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Department"
                    ),
                ),
                (
                    "state",
                    models.CharField(blank=True, max_length=100, verbose_name="State"),
                ),
                (
                    "country",
                    models.CharField(blank=True, max_length=40, verbose_name="Country"),
                ),
                (
                    "content_type",
                    creme.creme_core.models.fields.EntityCTypeForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "object",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="persons_addresses",
                        to="creme_core.cremeentity",
                    ),
                ),
            ],
            options={
                "verbose_name": "Address",
                "verbose_name_plural": "Addresses",
                "ordering": ("id",),
                "abstract": False,
                "swappable": "PERSONS_ADDRESS_MODEL",
            },
        ),
        migrations.CreateModel(
            name="Civility",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                ("title", models.CharField(max_length=100, verbose_name="Title")),
                ("shortcut", models.CharField(max_length=100, verbose_name="Shortcut")),
            ],
            options={
                "verbose_name": "Civility",
                "verbose_name_plural": "Civilities",
                "ordering": ("title",),
            },
        ),
        migrations.CreateModel(
            name="LegalForm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                ("title", models.CharField(max_length=100, verbose_name="Title")),
            ],
            options={
                "verbose_name": "Legal form",
                "verbose_name_plural": "Legal forms",
                "ordering": ("title",),
            },
        ),
        migrations.CreateModel(
            name="Position",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                ("title", models.CharField(max_length=100, verbose_name="Title")),
            ],
            options={
                "verbose_name": "People position",
                "verbose_name_plural": "People positions",
                "ordering": ("title",),
            },
        ),
        migrations.CreateModel(
            name="Sector",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                ("title", models.CharField(max_length=100, verbose_name="Title")),
            ],
            options={
                "verbose_name": "Line of business",
                "verbose_name_plural": "Lines of business",
                "ordering": ("title",),
            },
        ),
        migrations.CreateModel(
            name="StaffSize",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                ("size", models.CharField(max_length=100, verbose_name="Size")),
                (
                    "order",
                    creme.creme_core.models.fields.BasicAutoField(
                        blank=True, editable=False
                    ),
                ),
            ],
            options={
                "verbose_name": "Organisation staff size",
                "verbose_name_plural": "Organisation staff sizes",
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="Organisation",
            fields=[
                (
                    "cremeentity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="creme_core.cremeentity",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "is_managed",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        verbose_name="Managed by Sale Portal System",
                    ),
                ),
                (
                    "phone",
                    creme.creme_core.models.fields.PhoneField(
                        blank=True, max_length=100, verbose_name="Phone"
                    ),
                ),
                (
                    "fax",
                    models.CharField(blank=True, max_length=100, verbose_name="Fax"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Email address"
                    ),
                ),
                (
                    "url_site",
                    models.URLField(
                        blank=True, max_length=500, verbose_name="Web Site"
                    ),
                ),
                (
                    "capital",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Capital"
                    ),
                ),
                (
                    "annual_revenue",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Annual revenue"
                    ),
                ),
                (
                    "siren",
                    models.CharField(blank=True, max_length=100, verbose_name="SIREN"),
                ),
                (
                    "naf",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="NAF code"
                    ),
                ),
                (
                    "siret",
                    models.CharField(blank=True, max_length=100, verbose_name="SIRET"),
                ),
                (
                    "rcs",
                    models.CharField(blank=True, max_length=100, verbose_name="RCS/RM"),
                ),
                (
                    "tvaintra",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="VAT number"
                    ),
                ),
                (
                    "subject_to_vat",
                    models.BooleanField(default=True, verbose_name="Subject to VAT"),
                ),
                (
                    "creation_date",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Date of creation of the organisation",
                    ),
                ),
                (
                    "billing_address",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.PERSONS_ADDRESS_MODEL,
                        verbose_name="Billing address",
                    ),
                ),
                (
                    "image",
                    creme.documents.models.fields.ImageEntityForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="documents.document",
                        verbose_name="Logo",
                    ),
                ),
                (
                    "legal_form",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=creme.creme_core.models.deletion.CREME_REPLACE_NULL,
                        to="persons.legalform",
                        verbose_name="Legal form",
                    ),
                ),
                (
                    "sector",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=creme.creme_core.models.deletion.CREME_REPLACE_NULL,
                        to="persons.sector",
                        verbose_name="Sector",
                    ),
                ),
                (
                    "shipping_address",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.PERSONS_ADDRESS_MODEL,
                        verbose_name="Shipping address",
                    ),
                ),
                (
                    "staff_size",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=creme.creme_core.models.deletion.CREME_REPLACE_NULL,
                        to="persons.staffsize",
                        verbose_name="Staff size",
                    ),
                ),
            ],
            options={
                "verbose_name": "Organisation",
                "verbose_name_plural": "Organisations",
                "ordering": ("name",),
                "abstract": False,
                "swappable": "PERSONS_ORGANISATION_MODEL",
                "indexes": [
                    models.Index(
                        fields=["name", "cremeentity_ptr"],
                        name="persons__orga__default_lv",
                    )
                ],
            },
            bases=("creme_core.cremeentity", models.Model),
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "cremeentity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="creme_core.cremeentity",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(max_length=100, verbose_name="Last name"),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="First name"
                    ),
                ),
                (
                    "skype",
                    models.CharField(blank=True, max_length=100, verbose_name="Skype"),
                ),
                (
                    "phone",
                    creme.creme_core.models.fields.PhoneField(
                        blank=True, max_length=100, verbose_name="Phone"
                    ),
                ),
                (
                    "mobile",
                    creme.creme_core.models.fields.PhoneField(
                        blank=True, max_length=100, verbose_name="Mobile"
                    ),
                ),
                (
                    "fax",
                    models.CharField(blank=True, max_length=100, verbose_name="Fax"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Email address"
                    ),
                ),
                (
                    "url_site",
                    models.URLField(
                        blank=True, max_length=500, verbose_name="Web Site"
                    ),
                ),
                (
                    "full_position",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Detailed position"
                    ),
                ),
                (
                    "birthday",
                    models.DateField(blank=True, null=True, verbose_name="Birthday"),
                ),
                (
                    "billing_address",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.PERSONS_ADDRESS_MODEL,
                        verbose_name="Billing address",
                    ),
                ),
                (
                    "civility",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=creme.creme_core.models.deletion.CREME_REPLACE_NULL,
                        to="persons.civility",
                        verbose_name="Civility",
                    ),
                ),
                (
                    "image",
                    creme.documents.models.fields.ImageEntityForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="documents.document",
                        verbose_name="Photograph",
                    ),
                ),
                (
                    "is_user",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="related_contact",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Related user",
                    ),
                ),
                (
                    "languages",
                    models.ManyToManyField(
                        blank=True,
                        to="creme_core.language",
                        verbose_name="Spoken language(s)",
                    ),
                ),
                (
                    "position",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=creme.creme_core.models.deletion.CREME_REPLACE_NULL,
                        to="persons.position",
                        verbose_name="Position",
                    ),
                ),
                (
                    "sector",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=creme.creme_core.models.deletion.CREME_REPLACE_NULL,
                        to="persons.sector",
                        verbose_name="Line of business",
                    ),
                ),
                (
                    "shipping_address",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.PERSONS_ADDRESS_MODEL,
                        verbose_name="Shipping address",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contact",
                "verbose_name_plural": "Contacts",
                "ordering": ("last_name", "first_name"),
                "abstract": False,
                "swappable": "PERSONS_CONTACT_MODEL",
                "indexes": [
                    models.Index(
                        fields=["last_name", "first_name", "cremeentity_ptr"],
                        name="persons__contact__default_lv",
                    )
                ],
            },
            bases=("creme_core.cremeentity", models.Model),
        ),
    ]
