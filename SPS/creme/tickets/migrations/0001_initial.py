# Generated by Django 4.2.6 on 2023-10-13 14:33

import creme.creme_core.models.deletion
import creme.creme_core.models.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("creme_core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Criticity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="Name"),
                ),
                (
                    "order",
                    creme.creme_core.models.fields.BasicAutoField(
                        blank=True, editable=False
                    ),
                ),
            ],
            options={
                "verbose_name": "Ticket criticality",
                "verbose_name_plural": "Ticket criticalities",
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="Priority",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="Name"),
                ),
                (
                    "order",
                    creme.creme_core.models.fields.BasicAutoField(
                        blank=True, editable=False
                    ),
                ),
            ],
            options={
                "verbose_name": "Ticket priority",
                "verbose_name_plural": "Ticket priorities",
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="Status",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="Name"),
                ),
                (
                    "is_closed",
                    models.BooleanField(
                        default=False,
                        help_text="If you set as closed, existing tickets which use this status will not be updated automatically (i.e. closing dates will not be set).",
                        verbose_name='Is a "closed" status?',
                    ),
                ),
                (
                    "order",
                    creme.creme_core.models.fields.BasicAutoField(
                        blank=True, editable=False
                    ),
                ),
                (
                    "color",
                    creme.creme_core.models.fields.ColorField(
                        default=creme.creme_core.models.fields.ColorField.random,
                        max_length=6,
                        verbose_name="Color",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ticket status",
                "verbose_name_plural": "Ticket statuses",
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="TicketNumber",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TicketTemplate",
            fields=[
                (
                    "cremeentity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="creme_core.cremeentity",
                    ),
                ),
                (
                    "title",
                    models.CharField(blank=True, max_length=100, verbose_name="Title"),
                ),
                ("solution", models.TextField(blank=True, verbose_name="Solution")),
                (
                    "criticity",
                    models.ForeignKey(
                        on_delete=creme.creme_core.models.deletion.CREME_REPLACE,
                        to="tickets.criticity",
                        verbose_name="Criticality",
                    ),
                ),
                (
                    "priority",
                    models.ForeignKey(
                        on_delete=creme.creme_core.models.deletion.CREME_REPLACE,
                        to="tickets.priority",
                        verbose_name="Priority",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        on_delete=creme.creme_core.models.deletion.CREME_REPLACE,
                        to="tickets.status",
                        verbose_name="Status",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ticket template",
                "verbose_name_plural": "Ticket templates",
                "ordering": ("title",),
                "abstract": False,
                "swappable": "TICKETS_TEMPLATE_MODEL",
            },
            bases=("creme_core.cremeentity",),
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "cremeentity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="creme_core.cremeentity",
                    ),
                ),
                (
                    "title",
                    models.CharField(blank=True, max_length=100, verbose_name="Title"),
                ),
                ("solution", models.TextField(blank=True, verbose_name="Solution")),
                (
                    "number",
                    models.PositiveIntegerField(
                        editable=False, unique=True, verbose_name="Number"
                    ),
                ),
                (
                    "closing_date",
                    models.DateTimeField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Closing date",
                    ),
                ),
                (
                    "criticity",
                    models.ForeignKey(
                        on_delete=creme.creme_core.models.deletion.CREME_REPLACE,
                        to="tickets.criticity",
                        verbose_name="Criticality",
                    ),
                ),
                (
                    "priority",
                    models.ForeignKey(
                        on_delete=creme.creme_core.models.deletion.CREME_REPLACE,
                        to="tickets.priority",
                        verbose_name="Priority",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        on_delete=creme.creme_core.models.deletion.CREME_REPLACE,
                        to="tickets.status",
                        verbose_name="Status",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ticket",
                "verbose_name_plural": "Tickets",
                "ordering": ("title",),
                "abstract": False,
                "swappable": "TICKETS_TICKET_MODEL",
            },
            bases=("creme_core.cremeentity",),
        ),
    ]
