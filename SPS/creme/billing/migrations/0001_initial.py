# Generated by Django 4.2.6 on 2023-10-13 14:33

import creme.billing.models.fields
import creme.creme_core.models.fields
from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("creme_core", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="CreditNote",
            fields=[
                (
                    "cremeentity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="creme_core.cremeentity",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "number",
                    models.CharField(blank=True, max_length=100, verbose_name="Number"),
                ),
                (
                    "issuing_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Issuing date"
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Expiration date"
                    ),
                ),
                (
                    "discount",
                    creme.billing.models.fields.BillingDiscountField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=10,
                        verbose_name="Overall discount",
                    ),
                ),
                ("comment", models.TextField(blank=True, verbose_name="Comment")),
                (
                    "total_vat",
                    creme.creme_core.models.fields.MoneyField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=14,
                        null=True,
                        verbose_name="Total with VAT",
                    ),
                ),
                (
                    "total_no_vat",
                    creme.creme_core.models.fields.MoneyField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=14,
                        null=True,
                        verbose_name="Total without VAT",
                    ),
                ),
            ],
            options={
                "verbose_name": "Credit note",
                "verbose_name_plural": "Credit notes",
                "ordering": ("name",),
                "abstract": False,
                "swappable": "BILLING_CREDIT_NOTE_MODEL",
            },
            bases=("creme_core.cremeentity",),
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "cremeentity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="creme_core.cremeentity",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "number",
                    models.CharField(blank=True, max_length=100, verbose_name="Number"),
                ),
                (
                    "issuing_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Issuing date"
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Expiration date"
                    ),
                ),
                (
                    "discount",
                    creme.billing.models.fields.BillingDiscountField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=10,
                        verbose_name="Overall discount",
                    ),
                ),
                ("comment", models.TextField(blank=True, verbose_name="Comment")),
                (
                    "total_vat",
                    creme.creme_core.models.fields.MoneyField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=14,
                        null=True,
                        verbose_name="Total with VAT",
                    ),
                ),
                (
                    "total_no_vat",
                    creme.creme_core.models.fields.MoneyField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=14,
                        null=True,
                        verbose_name="Total without VAT",
                    ),
                ),
                (
                    "buyers_order_number",
                    models.CharField(
                        blank=True,
                        help_text="Number of buyer's order (french legislation)",
                        max_length=100,
                        verbose_name="Buyer's order",
                    ),
                ),
            ],
            options={
                "verbose_name": "Invoice",
                "verbose_name_plural": "Invoices",
                "ordering": ("name",),
                "abstract": False,
                "swappable": "BILLING_INVOICE_MODEL",
            },
            bases=("creme_core.cremeentity",),
        ),
        migrations.CreateModel(
            name="ProductLine",
            fields=[
                (
                    "cremeentity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="creme_core.cremeentity",
                    ),
                ),
                (
                    "on_the_fly_item",
                    models.CharField(
                        max_length=100, null=True, verbose_name="On-the-fly line"
                    ),
                ),
                ("comment", models.TextField(blank=True, verbose_name="Comment")),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("1.00"),
                        max_digits=10,
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=10,
                        verbose_name="Unit price",
                    ),
                ),
                (
                    "unit",
                    models.CharField(blank=True, max_length=100, verbose_name="Unit"),
                ),
                (
                    "discount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=10,
                        verbose_name="Discount",
                    ),
                ),
                (
                    "discount_unit",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "Percent"),
                            (2, "Amount per line"),
                            (3, "Amount per unit"),
                        ],
                        default=1,
                        verbose_name="Discount Unit",
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0, editable=False)),
            ],
            options={
                "verbose_name": "Product line",
                "verbose_name_plural": "Product lines",
                "ordering": ("created",),
                "abstract": False,
                "swappable": "BILLING_PRODUCT_LINE_MODEL",
            },
            bases=("creme_core.cremeentity",),
        ),
        migrations.CreateModel(
            name="Quote",
            fields=[
                (
                    "cremeentity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="creme_core.cremeentity",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "number",
                    models.CharField(blank=True, max_length=100, verbose_name="Number"),
                ),
                (
                    "issuing_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Issuing date"
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Expiration date"
                    ),
                ),
                (
                    "discount",
                    creme.billing.models.fields.BillingDiscountField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=10,
                        verbose_name="Overall discount",
                    ),
                ),
                ("comment", models.TextField(blank=True, verbose_name="Comment")),
                (
                    "total_vat",
                    creme.creme_core.models.fields.MoneyField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=14,
                        null=True,
                        verbose_name="Total with VAT",
                    ),
                ),
                (
                    "total_no_vat",
                    creme.creme_core.models.fields.MoneyField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=14,
                        null=True,
                        verbose_name="Total without VAT",
                    ),
                ),
                (
                    "acceptation_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Acceptation date"
                    ),
                ),
            ],
            options={
                "verbose_name": "Quote",
                "verbose_name_plural": "Quotes",
                "ordering": ("name",),
                "abstract": False,
                "swappable": "BILLING_QUOTE_MODEL",
            },
            bases=("creme_core.cremeentity",),
        ),
        migrations.CreateModel(
            name="SalesOrder",
            fields=[
                (
                    "cremeentity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="creme_core.cremeentity",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "number",
                    models.CharField(blank=True, max_length=100, verbose_name="Number"),
                ),
                (
                    "issuing_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Issuing date"
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Expiration date"
                    ),
                ),
                (
                    "discount",
                    creme.billing.models.fields.BillingDiscountField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=10,
                        verbose_name="Overall discount",
                    ),
                ),
                ("comment", models.TextField(blank=True, verbose_name="Comment")),
                (
                    "total_vat",
                    creme.creme_core.models.fields.MoneyField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=14,
                        null=True,
                        verbose_name="Total with VAT",
                    ),
                ),
                (
                    "total_no_vat",
                    creme.creme_core.models.fields.MoneyField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=14,
                        null=True,
                        verbose_name="Total without VAT",
                    ),
                ),
            ],
            options={
                "verbose_name": "Salesorder",
                "verbose_name_plural": "Salesorders",
                "ordering": ("name",),
                "abstract": False,
                "swappable": "BILLING_SALES_ORDER_MODEL",
            },
            bases=("creme_core.cremeentity",),
        ),
        migrations.CreateModel(
            name="ServiceLine",
            fields=[
                (
                    "cremeentity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="creme_core.cremeentity",
                    ),
                ),
                (
                    "on_the_fly_item",
                    models.CharField(
                        max_length=100, null=True, verbose_name="On-the-fly line"
                    ),
                ),
                ("comment", models.TextField(blank=True, verbose_name="Comment")),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("1.00"),
                        max_digits=10,
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=10,
                        verbose_name="Unit price",
                    ),
                ),
                (
                    "unit",
                    models.CharField(blank=True, max_length=100, verbose_name="Unit"),
                ),
                (
                    "discount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=10,
                        verbose_name="Discount",
                    ),
                ),
                (
                    "discount_unit",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "Percent"),
                            (2, "Amount per line"),
                            (3, "Amount per unit"),
                        ],
                        default=1,
                        verbose_name="Discount Unit",
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0, editable=False)),
            ],
            options={
                "verbose_name": "Service line",
                "verbose_name_plural": "Service lines",
                "ordering": ("created",),
                "abstract": False,
                "swappable": "BILLING_SERVICE_LINE_MODEL",
            },
            bases=("creme_core.cremeentity",),
        ),
        migrations.CreateModel(
            name="TemplateBase",
            fields=[
                (
                    "cremeentity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="creme_core.cremeentity",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "number",
                    models.CharField(blank=True, max_length=100, verbose_name="Number"),
                ),
                (
                    "issuing_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Issuing date"
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Expiration date"
                    ),
                ),
                (
                    "discount",
                    creme.billing.models.fields.BillingDiscountField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=10,
                        verbose_name="Overall discount",
                    ),
                ),
                ("comment", models.TextField(blank=True, verbose_name="Comment")),
                (
                    "total_vat",
                    creme.creme_core.models.fields.MoneyField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=14,
                        null=True,
                        verbose_name="Total with VAT",
                    ),
                ),
                (
                    "total_no_vat",
                    creme.creme_core.models.fields.MoneyField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=14,
                        null=True,
                        verbose_name="Total without VAT",
                    ),
                ),
                ("status_id", models.PositiveIntegerField(editable=False)),
            ],
            options={
                "verbose_name": "Template",
                "verbose_name_plural": "Templates",
                "ordering": ("name",),
                "abstract": False,
                "swappable": "BILLING_TEMPLATE_BASE_MODEL",
            },
            bases=("creme_core.cremeentity",),
        ),
        migrations.CreateModel(
            name="AdditionalInformation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
            ],
            options={
                "verbose_name": "Additional information",
                "verbose_name_plural": "Additional information",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="ConfigBillingAlgo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name_algo",
                    models.CharField(max_length=400, verbose_name="Algo name"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CreditNoteStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "order",
                    creme.creme_core.models.fields.BasicAutoField(
                        blank=True, editable=False
                    ),
                ),
                (
                    "color",
                    creme.creme_core.models.fields.ColorField(
                        default=creme.creme_core.models.fields.ColorField.random,
                        max_length=6,
                        verbose_name="Color",
                    ),
                ),
            ],
            options={
                "verbose_name": "Credit note status",
                "verbose_name_plural": "Credit note statuses",
                "ordering": ("order",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ExporterConfigItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("engine_id", models.CharField(max_length=80)),
                ("flavour_id", models.CharField(blank=True, max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name="InvoiceStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "order",
                    creme.creme_core.models.fields.BasicAutoField(
                        blank=True, editable=False
                    ),
                ),
                (
                    "color",
                    creme.creme_core.models.fields.ColorField(
                        default=creme.creme_core.models.fields.ColorField.random,
                        max_length=6,
                        verbose_name="Color",
                    ),
                ),
                (
                    "pending_payment",
                    models.BooleanField(default=False, verbose_name="Pending payment"),
                ),
            ],
            options={
                "verbose_name": "Invoice status",
                "verbose_name_plural": "Invoice statuses",
                "ordering": ("order",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PaymentInformation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "bank_code",
                    models.CharField(
                        blank=True, max_length=12, verbose_name="Bank code"
                    ),
                ),
                (
                    "counter_code",
                    models.CharField(
                        blank=True, max_length=12, verbose_name="Counter code"
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        blank=True, max_length=12, verbose_name="Account number"
                    ),
                ),
                (
                    "rib_key",
                    models.CharField(blank=True, max_length=12, verbose_name="RIB key"),
                ),
                (
                    "banking_domiciliation",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Banking domiciliation"
                    ),
                ),
                (
                    "iban",
                    models.CharField(blank=True, max_length=100, verbose_name="IBAN"),
                ),
                (
                    "bic",
                    models.CharField(blank=True, max_length=100, verbose_name="BIC"),
                ),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="Is default?"),
                ),
            ],
            options={
                "verbose_name": "Payment information",
                "verbose_name_plural": "Payment information",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="PaymentTerms",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Payment terms"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
            ],
            options={
                "verbose_name": "Payment terms",
                "verbose_name_plural": "Payment terms",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="QuoteStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "order",
                    creme.creme_core.models.fields.BasicAutoField(
                        blank=True, editable=False
                    ),
                ),
                (
                    "color",
                    creme.creme_core.models.fields.ColorField(
                        default=creme.creme_core.models.fields.ColorField.random,
                        max_length=6,
                        verbose_name="Color",
                    ),
                ),
                ("won", models.BooleanField(default=False, verbose_name="Won")),
            ],
            options={
                "verbose_name": "Quote status",
                "verbose_name_plural": "Quote statuses",
                "ordering": ("order",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SalesOrderStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "order",
                    creme.creme_core.models.fields.BasicAutoField(
                        blank=True, editable=False
                    ),
                ),
                (
                    "color",
                    creme.creme_core.models.fields.ColorField(
                        default=creme.creme_core.models.fields.ColorField.random,
                        max_length=6,
                        verbose_name="Color",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sales order status",
                "verbose_name_plural": "Sales order statuses",
                "ordering": ("order",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SettlementTerms",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Settlement terms"),
                ),
            ],
            options={
                "verbose_name": "Settlement terms",
                "verbose_name_plural": "Settlement terms",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="SimpleBillingAlgo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_number", models.IntegerField()),
                (
                    "prefix",
                    models.CharField(max_length=400, verbose_name="Invoice prefix"),
                ),
                (
                    "ct",
                    creme.creme_core.models.fields.CTypeForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
        ),
    ]
