# Generated by Django 4.2.6 on 2023-10-13 14:33

import creme.documents.models.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("creme_core", "0002_initial"),
        ("documents", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                (
                    "name",
                    models.CharField(
                        max_length=100, verbose_name="Name of the category"
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Description"
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="SubCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                (
                    "name",
                    models.CharField(
                        max_length=100, verbose_name="Name of the sub-category"
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Description"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.category",
                        verbose_name="Parent category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sub-category",
                "verbose_name_plural": "Sub-categories",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "cremeentity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="creme_core.cremeentity",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "reference",
                    models.CharField(max_length=100, verbose_name="Reference"),
                ),
                (
                    "countable",
                    models.BooleanField(default=False, verbose_name="Countable"),
                ),
                (
                    "unit",
                    models.CharField(blank=True, max_length=100, verbose_name="Unit"),
                ),
                (
                    "quantity_per_unit",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Quantity/Unit"
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="Unit price"
                    ),
                ),
                (
                    "web_site",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Web Site"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="products.category",
                        verbose_name="Category",
                    ),
                ),
                (
                    "images",
                    creme.documents.models.fields.ImageEntityManyToManyField(
                        blank=True, to="documents.document", verbose_name="Images"
                    ),
                ),
                (
                    "sub_category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="products.subcategory",
                        verbose_name="Sub-category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service",
                "verbose_name_plural": "Services",
                "ordering": ("name",),
                "abstract": False,
                "swappable": "PRODUCTS_SERVICE_MODEL",
            },
            bases=("creme_core.cremeentity",),
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "cremeentity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="creme_core.cremeentity",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                ("code", models.IntegerField(default=0, verbose_name="Code")),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="Unit price"
                    ),
                ),
                (
                    "unit",
                    models.CharField(blank=True, max_length=100, verbose_name="Unit"),
                ),
                (
                    "quantity_per_unit",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Quantity/Unit"
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Weight",
                    ),
                ),
                (
                    "stock",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Quantity/Stock"
                    ),
                ),
                (
                    "web_site",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Web Site"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="products.category",
                        verbose_name="Category",
                    ),
                ),
                (
                    "images",
                    creme.documents.models.fields.ImageEntityManyToManyField(
                        blank=True, to="documents.document", verbose_name="Images"
                    ),
                ),
                (
                    "sub_category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="products.subcategory",
                        verbose_name="Sub-category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "ordering": ("name",),
                "abstract": False,
                "swappable": "PRODUCTS_PRODUCT_MODEL",
            },
            bases=("creme_core.cremeentity",),
        ),
    ]
