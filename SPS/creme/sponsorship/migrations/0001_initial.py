# Generated by Django 4.2.6 on 2023-10-13 14:33

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("conference", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Benefit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("file", "File"),
                            ("richtext", "Rich Text"),
                            ("weblogo", "Web Logo"),
                            ("simple", "Simple"),
                            ("option", "Option"),
                        ],
                        default="simple",
                        max_length=10,
                        verbose_name="Type",
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("simple", "Simple"),
                            ("listing_text_vi", "Listing Text (Tiếng Việt)"),
                            ("listing_text_en", "Listing Text (English)"),
                            ("listing_text_ja", "Listing Text (Japanese)"),
                            ("listing_text_de", "Listing Text (German)"),
                            ("listing_text_ru", "Listing Text (Russian)"),
                        ],
                        default="simple",
                        max_length=20,
                        verbose_name="content type",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Sponsor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Sponsor Name")),
                (
                    "display_url",
                    models.URLField(blank=True, verbose_name="display URL"),
                ),
                ("external_url", models.URLField(verbose_name="External URL")),
                ("annotation", models.TextField(blank=True, verbose_name="Annotation")),
                (
                    "contact_name",
                    models.CharField(max_length=100, verbose_name="Contact Name"),
                ),
                (
                    "contact_email",
                    models.EmailField(max_length=254, verbose_name="Contact Email"),
                ),
                (
                    "added",
                    models.DateTimeField(
                        default=datetime.datetime.now, verbose_name="added"
                    ),
                ),
                ("active", models.BooleanField(default=False, verbose_name="active")),
                (
                    "web_logo_benefit",
                    models.BooleanField(
                        help_text="Web logo benefit is complete",
                        null=True,
                        verbose_name="Web logo benefit",
                    ),
                ),
                (
                    "print_logo_benefit",
                    models.BooleanField(
                        help_text="Print logo benefit is complete",
                        null=True,
                        verbose_name="Print logo benefit",
                    ),
                ),
                (
                    "print_description_benefit",
                    models.BooleanField(
                        help_text="Print description benefit is complete",
                        null=True,
                        verbose_name="Print description benefit",
                    ),
                ),
                (
                    "company_description_benefit",
                    models.BooleanField(
                        help_text="Company description benefit is complete",
                        null=True,
                        verbose_name="Company description benefit",
                    ),
                ),
                (
                    "applicant",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sponsorships",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Applicant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sponsor",
                "verbose_name_plural": "Sponsors",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SponsorLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                ("order", models.IntegerField(default=0, verbose_name="Order")),
                ("cost", models.PositiveIntegerField(verbose_name="Cost")),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="This is private.",
                        verbose_name="Description",
                    ),
                ),
                (
                    "conference",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="conference.conference",
                        verbose_name="Conference",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sponsor level",
                "verbose_name_plural": "Sponsor levels",
                "ordering": ["conference", "order"],
            },
        ),
        migrations.CreateModel(
            name="SponsorBenefit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "max_words",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Max words"
                    ),
                ),
                (
                    "other_limits",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Other limits"
                    ),
                ),
                ("text", models.TextField(blank=True, verbose_name="Text")),
                (
                    "upload",
                    models.FileField(
                        blank=True, upload_to="sponsor_files", verbose_name="File"
                    ),
                ),
                (
                    "is_complete",
                    models.BooleanField(
                        help_text="True - benefit complete; False - benefit incomplete; Null - n/a",
                        null=True,
                        verbose_name="Complete?",
                    ),
                ),
                (
                    "benefit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sponsor_benefits",
                        to="sponsorship.benefit",
                        verbose_name="Benefit",
                    ),
                ),
                (
                    "sponsor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sponsor_benefits",
                        to="sponsorship.sponsor",
                        verbose_name="Sponsor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sponsor benefit",
                "verbose_name_plural": "Sponsor benefits",
                "ordering": ["-active"],
            },
        ),
        migrations.AddField(
            model_name="sponsor",
            name="level",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="sponsorship.sponsorlevel",
                verbose_name="level",
            ),
        ),
        migrations.AddField(
            model_name="sponsor",
            name="sponsor_logo",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="sponsorship.sponsorbenefit",
                verbose_name="Sponsor logo",
            ),
        ),
        migrations.CreateModel(
            name="BenefitLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "max_words",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Max words"
                    ),
                ),
                (
                    "other_limits",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Other limits"
                    ),
                ),
                (
                    "benefit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="benefit_levels",
                        to="sponsorship.benefit",
                        verbose_name="Benefit",
                    ),
                ),
                (
                    "level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="benefit_levels",
                        to="sponsorship.sponsorlevel",
                        verbose_name="Level",
                    ),
                ),
            ],
            options={
                "verbose_name": "Benefit level",
                "verbose_name_plural": "Benefit levels",
                "ordering": ["level"],
            },
        ),
    ]
