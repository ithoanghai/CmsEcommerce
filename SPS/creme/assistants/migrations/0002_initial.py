# Generated by Django 4.2.6 on 2023-10-13 14:33

import creme.creme_core.models.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("creme_core", "0001_initial"),
        ("assistants", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.AddField(
            model_name="usermessage",
            name="entity",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assistants_messages",
                to="creme_core.cremeentity",
            ),
        ),
        migrations.AddField(
            model_name="usermessage",
            name="entity_content_type",
            field=creme.creme_core.models.fields.EntityCTypeForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="usermessage",
            name="priority",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="assistants.usermessagepriority",
                verbose_name="Priority",
            ),
        ),
        migrations.AddField(
            model_name="usermessage",
            name="recipient",
            field=creme.creme_core.models.fields.CremeUserForeignKey(
                related_name="received_assistants_messages_set",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Recipient",
            ),
        ),
        migrations.AddField(
            model_name="usermessage",
            name="sender",
            field=creme.creme_core.models.fields.CremeUserForeignKey(
                related_name="sent_assistants_messages_set",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Sender",
            ),
        ),
        migrations.AddField(
            model_name="todo",
            name="entity",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assistants_todos",
                to="creme_core.cremeentity",
            ),
        ),
        migrations.AddField(
            model_name="todo",
            name="entity_content_type",
            field=creme.creme_core.models.fields.EntityCTypeForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="todo",
            name="user",
            field=creme.creme_core.models.fields.CremeUserForeignKey(
                blank=True,
                null=True,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Owner user",
            ),
        ),
        migrations.AddField(
            model_name="memo",
            name="entity",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assistants_memos",
                to="creme_core.cremeentity",
            ),
        ),
        migrations.AddField(
            model_name="memo",
            name="entity_content_type",
            field=creme.creme_core.models.fields.EntityCTypeForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="memo",
            name="user",
            field=creme.creme_core.models.fields.CremeUserForeignKey(
                to=settings.AUTH_USER_MODEL, verbose_name="Owner user"
            ),
        ),
        migrations.AddField(
            model_name="alert",
            name="entity",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assistants_alerts",
                to="creme_core.cremeentity",
            ),
        ),
        migrations.AddField(
            model_name="alert",
            name="entity_content_type",
            field=creme.creme_core.models.fields.EntityCTypeForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="alert",
            name="user",
            field=creme.creme_core.models.fields.CremeUserForeignKey(
                blank=True,
                null=True,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Owner user",
            ),
        ),
        migrations.AddField(
            model_name="action",
            name="entity",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assistants_actions",
                to="creme_core.cremeentity",
            ),
        ),
        migrations.AddField(
            model_name="action",
            name="entity_content_type",
            field=creme.creme_core.models.fields.EntityCTypeForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="action",
            name="user",
            field=creme.creme_core.models.fields.CremeUserForeignKey(
                to=settings.AUTH_USER_MODEL, verbose_name="Owner user"
            ),
        ),
    ]
