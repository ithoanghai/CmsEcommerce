# Generated by Django 4.2.6 on 2023-10-17 18:18

import creme.creme_core.core.validators
import creme.reviews.models
import creme.reviews.utils
import datetime
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("conference", "0003_alter_conference_end_date_and_more"),
        ("speakers", "0004_alter_speaker_created_alter_speaker_name_and_more"),
        migrations.swappable_dependency(settings.PRODUCTS_PRODUCT_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AdditionalSpeaker",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[(1, "Pending"), (2, "Accepted"), (3, "Declined")],
                        default=1,
                        verbose_name="Trạng thái ",
                    ),
                ),
            ],
            options={
                "verbose_name": "Addtional speaker",
                "verbose_name_plural": "Additional speakers",
            },
        ),
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(max_length=100, verbose_name="Nhãn")),
                (
                    "from_address",
                    models.EmailField(max_length=254, verbose_name="From address"),
                ),
                ("subject", models.CharField(max_length=100, verbose_name="Chủ đề ")),
                ("body", models.TextField(verbose_name="Sản phẩm ")),
            ],
            options={
                "verbose_name": "notification template",
                "verbose_name_plural": "notification templates",
            },
        ),
        migrations.CreateModel(
            name="ProductReview",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.SmallIntegerField(
                        choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)],
                        verbose_name="Điểm tích lũy",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=255,
                        validators=[creme.creme_core.core.validators.non_whitespace],
                        verbose_name="Tiêu đề",
                    ),
                ),
                ("body", models.TextField(verbose_name="Sản phẩm ")),
                (
                    "name",
                    models.CharField(blank=True, max_length=255, verbose_name="Name"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Email "
                    ),
                ),
                ("homepage", models.URLField(blank=True, verbose_name="Đường dẫn ")),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[
                            (0, "Bắt buộc kiểm duyệt "),
                            (1, "Đồng ý "),
                            (2, "Loại bỏ "),
                        ],
                        default=creme.reviews.utils.get_default_review_status,
                        verbose_name="Trạng thái ",
                    ),
                ),
                (
                    "total_votes",
                    models.IntegerField(default=0, verbose_name="Tổng phiếu "),
                ),
                (
                    "delta_votes",
                    models.IntegerField(
                        db_index=True, default=0, verbose_name="Phiếu Delta "
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_reviews",
                        to=settings.PRODUCTS_PRODUCT_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews_product",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Product review",
                "verbose_name_plural": "Product reviews",
                "ordering": ["-delta_votes", "id"],
                "unique_together": {("product", "user")},
            },
        ),
        migrations.CreateModel(
            name="ProposalBase",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="Tiêu đề")),
                (
                    "description",
                    models.TextField(
                        help_text="If your proposal is accepted this will be made public and printed in the program. Should be one paragraph, maximum 400 characters.",
                        max_length=400,
                        verbose_name="Brief Description",
                    ),
                ),
                (
                    "abstract",
                    models.TextField(
                        help_text="Detailed outline. Will be made public if your proposal is accepted. Edit using <a href='http://daringfireball.net/projects/markdown/basics' target='_blank'>Markdown</a>.",
                        verbose_name="Detailed Abstract",
                    ),
                ),
                ("abstract_html", models.TextField(blank=True)),
                (
                    "additional_notes",
                    models.TextField(
                        blank=True,
                        help_text="Anything else you'd like the program committee to know when making their selection: your past experience, etc. This is not made public. Edit using <a href='http://daringfireball.net/projects/markdown/basics' target='_blank'>Markdown</a>.",
                        verbose_name="Addtional Notes",
                    ),
                ),
                ("additional_notes_html", models.TextField(blank=True)),
                (
                    "submitted",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="Submitted",
                    ),
                ),
                (
                    "cancelled",
                    models.BooleanField(default=False, verbose_name="Hủy bỏ "),
                ),
                (
                    "additional_speakers",
                    models.ManyToManyField(
                        blank=True,
                        through="reviews.AdditionalSpeaker",
                        to="speakers.speaker",
                        verbose_name="Addtional speakers",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SupportingDocument",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Created at"
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to=creme.reviews.models.uuid_filename,
                        verbose_name="Thư mục ",
                    ),
                ),
                (
                    "description",
                    models.CharField(max_length=140, verbose_name="Mô tả chi tiết "),
                ),
                (
                    "proposal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supporting_documents",
                        to="reviews.proposalbase",
                        verbose_name="Proposal",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proposals_supporting_documents",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Uploaded by",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReviewAssignment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "origin",
                    models.IntegerField(
                        choices=[
                            (0, "auto-assigned, initial"),
                            (1, "opted-in"),
                            (2, "auto-assigned, later"),
                        ],
                        verbose_name="Origin",
                    ),
                ),
                (
                    "assigned_at",
                    models.DateTimeField(
                        default=datetime.datetime.now, verbose_name="Assigned at"
                    ),
                ),
                (
                    "opted_out",
                    models.BooleanField(default=False, verbose_name="Opted out"),
                ),
                (
                    "proposal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reviews.proposalbase",
                        verbose_name="Proposal",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="review_assignments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Tên khách hàng",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vote",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "+1",
                                "+1 — Good proposal and I will argue for it to be accepted.",
                            ),
                            (
                                "+0",
                                "+0 — OK proposal, but I will not argue for it to be accepted.",
                            ),
                            (
                                "−0",
                                "−0 — Weak proposal, but I will not argue strongly against acceptance.",
                            ),
                            (
                                "−1",
                                "−1 — Serious issues and I will argue to reject this proposal.",
                            ),
                        ],
                        max_length=2,
                        verbose_name="Phiếu ",
                    ),
                ),
                ("comment", models.TextField(verbose_name="Bình luận")),
                ("comment_html", models.TextField(blank=True)),
                (
                    "submitted_at",
                    models.DateTimeField(
                        default=datetime.datetime.now,
                        editable=False,
                        verbose_name="Submitted at",
                    ),
                ),
                (
                    "proposal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="reviews.proposalbase",
                        verbose_name="Proposal",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Tên khách hàng",
                    ),
                ),
            ],
            options={
                "verbose_name": "review",
                "verbose_name_plural": "reviews",
            },
        ),
        migrations.CreateModel(
            name="ResultNotification",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        default=datetime.datetime.now, verbose_name="Timestamp"
                    ),
                ),
                (
                    "to_address",
                    models.EmailField(max_length=254, verbose_name="To address"),
                ),
                (
                    "from_address",
                    models.EmailField(max_length=254, verbose_name="From address"),
                ),
                ("subject", models.CharField(max_length=100, verbose_name="Chủ đề ")),
                ("body", models.TextField(verbose_name="Sản phẩm ")),
                (
                    "proposal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="reviews.proposalbase",
                        verbose_name="Proposal",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="reviews.notificationtemplate",
                        verbose_name="Template",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProposalSection",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "start",
                    models.DateTimeField(blank=True, null=True, verbose_name="Start"),
                ),
                (
                    "end",
                    models.DateTimeField(blank=True, null=True, verbose_name="End"),
                ),
                ("closed", models.BooleanField(null=True, verbose_name="Đóng ")),
                (
                    "published",
                    models.BooleanField(null=True, verbose_name="Đã xuất bản"),
                ),
                (
                    "section",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="conference.section",
                        verbose_name="Section",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProposalResult",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=5,
                        verbose_name="Điểm tích lũy",
                    ),
                ),
                (
                    "vote_count",
                    models.PositiveIntegerField(default=0, verbose_name="Vote count"),
                ),
                (
                    "plus_one",
                    models.PositiveIntegerField(default=0, verbose_name="Plus one"),
                ),
                (
                    "plus_zero",
                    models.PositiveIntegerField(default=0, verbose_name="Plus zero"),
                ),
                (
                    "minus_zero",
                    models.PositiveIntegerField(default=0, verbose_name="Minus zero"),
                ),
                (
                    "minus_one",
                    models.PositiveIntegerField(default=0, verbose_name="Minus one"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("accepted", "accepted"),
                            ("rejected", "rejected"),
                            ("undecided", "undecided"),
                            ("standby", "standby"),
                        ],
                        default="undecided",
                        max_length=20,
                        verbose_name="Trạng thái ",
                    ),
                ),
                (
                    "proposal",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="result",
                        to="reviews.proposalbase",
                        verbose_name="Proposal",
                    ),
                ),
            ],
            options={
                "verbose_name": "proposal_result",
                "verbose_name_plural": "proposal_results",
            },
        ),
        migrations.CreateModel(
            name="ProposalMessage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField(verbose_name="Tin nhắn")),
                ("message_html", models.TextField(blank=True)),
                (
                    "submitted_at",
                    models.DateTimeField(
                        default=datetime.datetime.now,
                        editable=False,
                        verbose_name="Submitted at",
                    ),
                ),
                (
                    "proposal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="reviews.proposalbase",
                        verbose_name="Proposal",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Tên khách hàng",
                    ),
                ),
            ],
            options={
                "verbose_name": "proposal message",
                "verbose_name_plural": "proposal messages",
                "ordering": ["submitted_at"],
            },
        ),
        migrations.CreateModel(
            name="ProposalKind",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Tên")),
                ("slug", models.SlugField(verbose_name="Tiêu đề ")),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proposal_kinds",
                        to="conference.section",
                        verbose_name="Section",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="proposalbase",
            name="kind",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="reviews.proposalkind",
                verbose_name="Kind",
            ),
        ),
        migrations.AddField(
            model_name="proposalbase",
            name="speaker",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="proposals",
                to="speakers.speaker",
                verbose_name="Speaker",
            ),
        ),
        migrations.AddField(
            model_name="proposalbase",
            name="submitter",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="Chữ ")),
                ("text_html", models.TextField(blank=True)),
                (
                    "public",
                    models.BooleanField(
                        choices=[(True, "public"), (False, "private")],
                        default=False,
                        verbose_name="Công khai",
                    ),
                ),
                (
                    "commented_at",
                    models.DateTimeField(
                        default=datetime.datetime.now, verbose_name="Commented at"
                    ),
                ),
                (
                    "commenter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments_received",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Commenter",
                    ),
                ),
                (
                    "proposal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="reviews.proposalbase",
                        verbose_name="Proposal",
                    ),
                ),
            ],
            options={
                "verbose_name": "comment",
                "verbose_name_plural": "comments",
            },
        ),
        migrations.AddField(
            model_name="additionalspeaker",
            name="proposalbase",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="reviews.proposalbase",
                verbose_name="Proposalbase",
            ),
        ),
        migrations.AddField(
            model_name="additionalspeaker",
            name="speaker",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="speakers.speaker",
                verbose_name="Speaker",
            ),
        ),
        migrations.CreateModel(
            name="Vote",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "delta",
                    models.SmallIntegerField(
                        choices=[(1, "Lên trên "), (-1, "Xuống dưới ")],
                        verbose_name="Delta ",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now=True)),
                (
                    "review",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to="reviews.productreview",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="review_votes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Phiếu ",
                "verbose_name_plural": "Những phiếu bầu ",
                "ordering": ["-date_created"],
                "abstract": False,
                "unique_together": {("user", "review")},
            },
        ),
        migrations.CreateModel(
            name="LatestVote",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vote",
                    models.CharField(
                        choices=[
                            (
                                "+1",
                                "+1 — Good proposal and I will argue for it to be accepted.",
                            ),
                            (
                                "+0",
                                "+0 — OK proposal, but I will not argue for it to be accepted.",
                            ),
                            (
                                "−0",
                                "−0 — Weak proposal, but I will not argue strongly against acceptance.",
                            ),
                            (
                                "−1",
                                "−1 — Serious issues and I will argue to reject this proposal.",
                            ),
                        ],
                        max_length=2,
                        verbose_name="Phiếu ",
                    ),
                ),
                (
                    "submitted_at",
                    models.DateTimeField(
                        default=datetime.datetime.now,
                        editable=False,
                        verbose_name="Submitted at",
                    ),
                ),
                (
                    "proposal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to="reviews.proposalbase",
                        verbose_name="Proposal",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Tên khách hàng",
                    ),
                ),
            ],
            options={
                "verbose_name": "latest vote",
                "verbose_name_plural": "latest votes",
                "unique_together": {("proposal", "user")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="additionalspeaker",
            unique_together={("speaker", "proposalbase")},
        ),
    ]
