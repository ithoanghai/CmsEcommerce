# Generated by Django 4.2.6 on 2023-10-13 14:33

import creme.creme_core.accounts.fields
import creme.creme_core.models.auth
import creme.creme_core.models.bricks
import creme.creme_core.models.fields
from decimal import Decimal
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contacts", "0001_initial"),
        ("cases", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=30,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="Username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="First name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        error_messages={
                            "unique": "A user with that email already exists."
                        },
                        max_length=150,
                        unique=True,
                        verbose_name="Email address",
                    ),
                ),
                ("alternate_email", models.EmailField(max_length=150, null=True)),
                ("gender", models.CharField(blank=True, max_length=20)),
                ("status", models.BooleanField(default=False)),
                ("about", models.TextField(blank=True)),
                (
                    "displayed_name",
                    models.CharField(
                        blank=True,
                        help_text="If you do not fill this field, an automatic name will be used («John Doe» will be displayed as «John D.»).",
                        max_length=50,
                        verbose_name="Displayed name",
                    ),
                ),
                (
                    "is_team",
                    models.BooleanField(default=False, verbose_name="Is a team?"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Active?"),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="Is staff?"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(default=False, verbose_name="Is a superuser?"),
                ),
                (
                    "date_joined",
                    models.DateTimeField(auto_now=True, verbose_name="Date joined"),
                ),
                (
                    "theme",
                    models.CharField(
                        choices=[("icecream", "Ice cream"), ("chantilly", "Chantilly")],
                        default="icecream",
                        max_length=50,
                        verbose_name="Theme",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "Language of your browser"),
                            ("vi", "Tiếng Việt"),
                            ("en", "English"),
                            ("ja", "Japanese"),
                            ("de", "German"),
                            ("ru", "Russian"),
                        ],
                        default="",
                        max_length=10,
                        verbose_name="Language",
                    ),
                ),
                (
                    "time_zone",
                    models.CharField(
                        choices=[
                            ("Asia/Thimphu", "Asia/Thimphu"),
                            ("America/New_York", "America/New_York"),
                            ("Pacific/Kosrae", "Pacific/Kosrae"),
                            ("Asia/Istanbul", "Asia/Istanbul"),
                            ("Etc/GMT+3", "Etc/GMT+3"),
                            ("Asia/Hovd", "Asia/Hovd"),
                            ("Pacific/Truk", "Pacific/Truk"),
                            ("Asia/Tomsk", "Asia/Tomsk"),
                            ("America/Rankin_Inlet", "America/Rankin_Inlet"),
                            ("Africa/Freetown", "Africa/Freetown"),
                            ("CST6CDT", "CST6CDT"),
                            ("Africa/Lubumbashi", "Africa/Lubumbashi"),
                            ("Asia/Hebron", "Asia/Hebron"),
                            ("America/Danmarkshavn", "America/Danmarkshavn"),
                            ("Africa/Kigali", "Africa/Kigali"),
                            ("Asia/Gaza", "Asia/Gaza"),
                            ("Etc/GMT+10", "Etc/GMT+10"),
                            ("Australia/Hobart", "Australia/Hobart"),
                            ("US/Aleutian", "US/Aleutian"),
                            ("Europe/Bratislava", "Europe/Bratislava"),
                            ("America/Jujuy", "America/Jujuy"),
                            ("America/Port_of_Spain", "America/Port_of_Spain"),
                            ("Asia/Oral", "Asia/Oral"),
                            ("Indian/Maldives", "Indian/Maldives"),
                            ("Asia/Krasnoyarsk", "Asia/Krasnoyarsk"),
                            ("Pacific/Majuro", "Pacific/Majuro"),
                            ("America/Lima", "America/Lima"),
                            ("America/Sao_Paulo", "America/Sao_Paulo"),
                            ("Etc/GMT+0", "Etc/GMT+0"),
                            ("Australia/Lindeman", "Australia/Lindeman"),
                            ("America/Cuiaba", "America/Cuiaba"),
                            ("Greenwich", "Greenwich"),
                            ("America/Argentina/Cordoba", "America/Argentina/Cordoba"),
                            ("America/Ciudad_Juarez", "America/Ciudad_Juarez"),
                            ("America/Asuncion", "America/Asuncion"),
                            ("Africa/Malabo", "Africa/Malabo"),
                            ("America/Vancouver", "America/Vancouver"),
                            ("America/St_Kitts", "America/St_Kitts"),
                            ("America/St_Lucia", "America/St_Lucia"),
                            ("Pacific/Honolulu", "Pacific/Honolulu"),
                            ("Africa/Khartoum", "Africa/Khartoum"),
                            ("Israel", "Israel"),
                            ("Asia/Damascus", "Asia/Damascus"),
                            ("Europe/Rome", "Europe/Rome"),
                            ("Australia/LHI", "Australia/LHI"),
                            ("America/Mazatlan", "America/Mazatlan"),
                            ("Europe/Astrakhan", "Europe/Astrakhan"),
                            ("America/La_Paz", "America/La_Paz"),
                            ("Etc/GMT-6", "Etc/GMT-6"),
                            ("America/Caracas", "America/Caracas"),
                            ("GMT+0", "GMT+0"),
                            ("Pacific/Enderbury", "Pacific/Enderbury"),
                            ("Asia/Baku", "Asia/Baku"),
                            ("Asia/Singapore", "Asia/Singapore"),
                            ("Asia/Jakarta", "Asia/Jakarta"),
                            ("Europe/Tallinn", "Europe/Tallinn"),
                            ("Africa/Brazzaville", "Africa/Brazzaville"),
                            ("Antarctica/Casey", "Antarctica/Casey"),
                            ("Canada/Pacific", "Canada/Pacific"),
                            ("Asia/Kabul", "Asia/Kabul"),
                            ("Asia/Muscat", "Asia/Muscat"),
                            ("Pacific/Chuuk", "Pacific/Chuuk"),
                            ("America/El_Salvador", "America/El_Salvador"),
                            ("America/Argentina/Jujuy", "America/Argentina/Jujuy"),
                            ("Europe/Oslo", "Europe/Oslo"),
                            ("America/Santiago", "America/Santiago"),
                            ("Europe/Prague", "Europe/Prague"),
                            ("ROC", "ROC"),
                            ("Europe/Madrid", "Europe/Madrid"),
                            ("Pacific/Galapagos", "Pacific/Galapagos"),
                            ("Asia/Kolkata", "Asia/Kolkata"),
                            ("Asia/Tel_Aviv", "Asia/Tel_Aviv"),
                            ("America/Thule", "America/Thule"),
                            ("Mexico/BajaSur", "Mexico/BajaSur"),
                            ("Africa/Bangui", "Africa/Bangui"),
                            ("Etc/GMT+6", "Etc/GMT+6"),
                            ("Antarctica/Rothera", "Antarctica/Rothera"),
                            ("America/Ensenada", "America/Ensenada"),
                            ("America/Managua", "America/Managua"),
                            ("America/Tijuana", "America/Tijuana"),
                            ("Etc/GMT+5", "Etc/GMT+5"),
                            ("Asia/Choibalsan", "Asia/Choibalsan"),
                            ("Europe/Belgrade", "Europe/Belgrade"),
                            ("MET", "MET"),
                            ("Canada/Central", "Canada/Central"),
                            ("Pacific/Noumea", "Pacific/Noumea"),
                            ("America/Fort_Wayne", "America/Fort_Wayne"),
                            ("Chile/EasterIsland", "Chile/EasterIsland"),
                            ("America/Matamoros", "America/Matamoros"),
                            ("Africa/Djibouti", "Africa/Djibouti"),
                            ("Asia/Ashgabat", "Asia/Ashgabat"),
                            ("Africa/Mbabane", "Africa/Mbabane"),
                            ("Africa/Algiers", "Africa/Algiers"),
                            ("Asia/Ujung_Pandang", "Asia/Ujung_Pandang"),
                            ("Asia/Ust-Nera", "Asia/Ust-Nera"),
                            ("Atlantic/Faeroe", "Atlantic/Faeroe"),
                            ("America/Winnipeg", "America/Winnipeg"),
                            ("Africa/Timbuktu", "Africa/Timbuktu"),
                            ("Atlantic/Faroe", "Atlantic/Faroe"),
                            ("Asia/Irkutsk", "Asia/Irkutsk"),
                            ("Pacific/Efate", "Pacific/Efate"),
                            ("America/Aruba", "America/Aruba"),
                            (
                                "America/Argentina/San_Luis",
                                "America/Argentina/San_Luis",
                            ),
                            ("Asia/Chita", "Asia/Chita"),
                            ("Europe/Berlin", "Europe/Berlin"),
                            ("Europe/Kyiv", "Europe/Kyiv"),
                            (
                                "America/Argentina/Buenos_Aires",
                                "America/Argentina/Buenos_Aires",
                            ),
                            ("Africa/El_Aaiun", "Africa/El_Aaiun"),
                            ("US/Eastern", "US/Eastern"),
                            ("CET", "CET"),
                            ("Europe/Malta", "Europe/Malta"),
                            ("Pacific/Nauru", "Pacific/Nauru"),
                            ("Etc/GMT0", "Etc/GMT0"),
                            ("America/Virgin", "America/Virgin"),
                            ("Australia/Eucla", "Australia/Eucla"),
                            ("Pacific/Rarotonga", "Pacific/Rarotonga"),
                            ("HST", "HST"),
                            ("Asia/Aqtobe", "Asia/Aqtobe"),
                            ("Australia/Lord_Howe", "Australia/Lord_Howe"),
                            ("America/Lower_Princes", "America/Lower_Princes"),
                            ("Pacific/Guadalcanal", "Pacific/Guadalcanal"),
                            ("GB-Eire", "GB-Eire"),
                            ("Africa/Mogadishu", "Africa/Mogadishu"),
                            ("America/Pangnirtung", "America/Pangnirtung"),
                            ("Africa/Maseru", "Africa/Maseru"),
                            ("Etc/GMT-3", "Etc/GMT-3"),
                            ("America/Fortaleza", "America/Fortaleza"),
                            ("Asia/Qostanay", "Asia/Qostanay"),
                            ("Asia/Seoul", "Asia/Seoul"),
                            (
                                "America/Argentina/Rio_Gallegos",
                                "America/Argentina/Rio_Gallegos",
                            ),
                            ("Brazil/DeNoronha", "Brazil/DeNoronha"),
                            ("Europe/Kiev", "Europe/Kiev"),
                            ("Etc/GMT-11", "Etc/GMT-11"),
                            (
                                "America/North_Dakota/New_Salem",
                                "America/North_Dakota/New_Salem",
                            ),
                            ("Asia/Novosibirsk", "Asia/Novosibirsk"),
                            ("Europe/Samara", "Europe/Samara"),
                            ("America/Chicago", "America/Chicago"),
                            ("America/Indiana/Knox", "America/Indiana/Knox"),
                            ("Antarctica/DumontDUrville", "Antarctica/DumontDUrville"),
                            ("Europe/Luxembourg", "Europe/Luxembourg"),
                            ("Singapore", "Singapore"),
                            (
                                "America/Argentina/La_Rioja",
                                "America/Argentina/La_Rioja",
                            ),
                            ("Asia/Tehran", "Asia/Tehran"),
                            ("Europe/Kaliningrad", "Europe/Kaliningrad"),
                            ("Brazil/East", "Brazil/East"),
                            ("Pacific/Niue", "Pacific/Niue"),
                            ("Africa/Banjul", "Africa/Banjul"),
                            ("America/Recife", "America/Recife"),
                            ("NZ", "NZ"),
                            ("Asia/Rangoon", "Asia/Rangoon"),
                            ("America/St_Johns", "America/St_Johns"),
                            ("Antarctica/Mawson", "Antarctica/Mawson"),
                            ("Asia/Famagusta", "Asia/Famagusta"),
                            ("America/Havana", "America/Havana"),
                            ("America/Louisville", "America/Louisville"),
                            ("Atlantic/South_Georgia", "Atlantic/South_Georgia"),
                            ("Mexico/General", "Mexico/General"),
                            ("America/Yakutat", "America/Yakutat"),
                            ("Egypt", "Egypt"),
                            ("Atlantic/Madeira", "Atlantic/Madeira"),
                            ("America/Eirunepe", "America/Eirunepe"),
                            ("Africa/Cairo", "Africa/Cairo"),
                            ("US/Mountain", "US/Mountain"),
                            ("America/Metlakatla", "America/Metlakatla"),
                            ("America/Mendoza", "America/Mendoza"),
                            ("Africa/Dar_es_Salaam", "Africa/Dar_es_Salaam"),
                            ("America/Belize", "America/Belize"),
                            ("America/Bahia", "America/Bahia"),
                            (
                                "America/Indiana/Indianapolis",
                                "America/Indiana/Indianapolis",
                            ),
                            ("Etc/GMT+2", "Etc/GMT+2"),
                            ("Etc/GMT-2", "Etc/GMT-2"),
                            ("Etc/Universal", "Etc/Universal"),
                            ("America/Buenos_Aires", "America/Buenos_Aires"),
                            ("Indian/Mauritius", "Indian/Mauritius"),
                            ("America/Cambridge_Bay", "America/Cambridge_Bay"),
                            ("Pacific/Samoa", "Pacific/Samoa"),
                            ("Australia/North", "Australia/North"),
                            ("America/Edmonton", "America/Edmonton"),
                            ("Etc/GMT-12", "Etc/GMT-12"),
                            ("America/Anguilla", "America/Anguilla"),
                            ("Brazil/Acre", "Brazil/Acre"),
                            ("Europe/Vilnius", "Europe/Vilnius"),
                            ("US/Indiana-Starke", "US/Indiana-Starke"),
                            ("Antarctica/Davis", "Antarctica/Davis"),
                            ("Pacific/Port_Moresby", "Pacific/Port_Moresby"),
                            ("America/Maceio", "America/Maceio"),
                            ("America/Indiana/Winamac", "America/Indiana/Winamac"),
                            ("Asia/Brunei", "Asia/Brunei"),
                            ("Australia/Canberra", "Australia/Canberra"),
                            ("Europe/Tiraspol", "Europe/Tiraspol"),
                            ("Asia/Riyadh", "Asia/Riyadh"),
                            ("Asia/Nicosia", "Asia/Nicosia"),
                            ("Europe/Budapest", "Europe/Budapest"),
                            ("Pacific/Wallis", "Pacific/Wallis"),
                            ("Africa/Gaborone", "Africa/Gaborone"),
                            ("America/Araguaina", "America/Araguaina"),
                            ("Asia/Calcutta", "Asia/Calcutta"),
                            ("Etc/GMT-0", "Etc/GMT-0"),
                            ("Asia/Ashkhabad", "Asia/Ashkhabad"),
                            ("PST8PDT", "PST8PDT"),
                            ("Atlantic/Canary", "Atlantic/Canary"),
                            ("Etc/GMT-8", "Etc/GMT-8"),
                            ("US/East-Indiana", "US/East-Indiana"),
                            ("America/Cordoba", "America/Cordoba"),
                            ("Africa/Libreville", "Africa/Libreville"),
                            ("Antarctica/Troll", "Antarctica/Troll"),
                            ("Atlantic/St_Helena", "Atlantic/St_Helena"),
                            ("Indian/Chagos", "Indian/Chagos"),
                            ("Antarctica/McMurdo", "Antarctica/McMurdo"),
                            ("Atlantic/Cape_Verde", "Atlantic/Cape_Verde"),
                            ("ROK", "ROK"),
                            ("Factory", "Factory"),
                            ("Pacific/Tahiti", "Pacific/Tahiti"),
                            ("Asia/Hong_Kong", "Asia/Hong_Kong"),
                            ("America/Indiana/Marengo", "America/Indiana/Marengo"),
                            ("Africa/Harare", "Africa/Harare"),
                            ("Hongkong", "Hongkong"),
                            ("America/Kralendijk", "America/Kralendijk"),
                            ("Africa/Dakar", "Africa/Dakar"),
                            ("America/Shiprock", "America/Shiprock"),
                            ("Pacific/Kanton", "Pacific/Kanton"),
                            ("Africa/Ouagadougou", "Africa/Ouagadougou"),
                            ("Etc/GMT+1", "Etc/GMT+1"),
                            ("Eire", "Eire"),
                            ("America/Nuuk", "America/Nuuk"),
                            ("Europe/Moscow", "Europe/Moscow"),
                            ("America/Dawson_Creek", "America/Dawson_Creek"),
                            ("Etc/UTC", "Etc/UTC"),
                            ("Asia/Sakhalin", "Asia/Sakhalin"),
                            ("Africa/Ndjamena", "Africa/Ndjamena"),
                            ("Asia/Katmandu", "Asia/Katmandu"),
                            ("Asia/Tbilisi", "Asia/Tbilisi"),
                            ("America/Paramaribo", "America/Paramaribo"),
                            ("Indian/Mayotte", "Indian/Mayotte"),
                            (
                                "America/North_Dakota/Center",
                                "America/North_Dakota/Center",
                            ),
                            ("Asia/Ulaanbaatar", "Asia/Ulaanbaatar"),
                            ("America/Montserrat", "America/Montserrat"),
                            ("Africa/Johannesburg", "Africa/Johannesburg"),
                            ("Asia/Phnom_Penh", "Asia/Phnom_Penh"),
                            ("Etc/GMT+7", "Etc/GMT+7"),
                            ("Asia/Aden", "Asia/Aden"),
                            ("WET", "WET"),
                            ("Canada/Newfoundland", "Canada/Newfoundland"),
                            ("Africa/Blantyre", "Africa/Blantyre"),
                            ("Europe/Warsaw", "Europe/Warsaw"),
                            ("America/Costa_Rica", "America/Costa_Rica"),
                            ("America/Guayaquil", "America/Guayaquil"),
                            ("Africa/Conakry", "Africa/Conakry"),
                            ("America/Port-au-Prince", "America/Port-au-Prince"),
                            ("Canada/Yukon", "Canada/Yukon"),
                            ("Australia/Yancowinna", "Australia/Yancowinna"),
                            ("Asia/Magadan", "Asia/Magadan"),
                            ("Pacific/Chatham", "Pacific/Chatham"),
                            ("Atlantic/Jan_Mayen", "Atlantic/Jan_Mayen"),
                            ("Asia/Manila", "Asia/Manila"),
                            ("Asia/Srednekolymsk", "Asia/Srednekolymsk"),
                            ("America/Montreal", "America/Montreal"),
                            ("Pacific/Ponape", "Pacific/Ponape"),
                            ("Europe/Busingen", "Europe/Busingen"),
                            ("Etc/GMT-1", "Etc/GMT-1"),
                            ("Pacific/Johnston", "Pacific/Johnston"),
                            ("America/Cayenne", "America/Cayenne"),
                            ("US/Arizona", "US/Arizona"),
                            ("America/Anchorage", "America/Anchorage"),
                            ("Pacific/Pitcairn", "Pacific/Pitcairn"),
                            ("Pacific/Midway", "Pacific/Midway"),
                            ("GMT-0", "GMT-0"),
                            ("Kwajalein", "Kwajalein"),
                            ("America/Thunder_Bay", "America/Thunder_Bay"),
                            ("Africa/Nairobi", "Africa/Nairobi"),
                            ("GB", "GB"),
                            ("America/Porto_Velho", "America/Porto_Velho"),
                            ("America/Moncton", "America/Moncton"),
                            ("Africa/Lagos", "Africa/Lagos"),
                            ("Africa/Addis_Ababa", "Africa/Addis_Ababa"),
                            (
                                "America/North_Dakota/Beulah",
                                "America/North_Dakota/Beulah",
                            ),
                            ("Africa/Asmara", "Africa/Asmara"),
                            ("America/Hermosillo", "America/Hermosillo"),
                            ("America/Tortola", "America/Tortola"),
                            ("America/Miquelon", "America/Miquelon"),
                            ("Europe/Volgograd", "Europe/Volgograd"),
                            ("America/Indiana/Vincennes", "America/Indiana/Vincennes"),
                            ("Canada/Saskatchewan", "Canada/Saskatchewan"),
                            ("Antarctica/Palmer", "Antarctica/Palmer"),
                            ("Australia/Currie", "Australia/Currie"),
                            ("Asia/Beirut", "Asia/Beirut"),
                            ("Asia/Karachi", "Asia/Karachi"),
                            ("Atlantic/Stanley", "Atlantic/Stanley"),
                            ("Australia/Queensland", "Australia/Queensland"),
                            ("Chile/Continental", "Chile/Continental"),
                            ("Asia/Makassar", "Asia/Makassar"),
                            ("America/Glace_Bay", "America/Glace_Bay"),
                            ("Pacific/Pago_Pago", "Pacific/Pago_Pago"),
                            ("Etc/GMT", "Etc/GMT"),
                            ("Australia/NSW", "Australia/NSW"),
                            ("America/Boise", "America/Boise"),
                            ("Europe/Jersey", "Europe/Jersey"),
                            ("Europe/Podgorica", "Europe/Podgorica"),
                            ("Europe/San_Marino", "Europe/San_Marino"),
                            ("Jamaica", "Jamaica"),
                            ("EST5EDT", "EST5EDT"),
                            ("America/Ojinaga", "America/Ojinaga"),
                            ("Europe/London", "Europe/London"),
                            ("Africa/Windhoek", "Africa/Windhoek"),
                            ("Europe/Andorra", "Europe/Andorra"),
                            ("America/Adak", "America/Adak"),
                            ("GMT", "GMT"),
                            ("Asia/Baghdad", "Asia/Baghdad"),
                            ("UTC", "UTC"),
                            ("Africa/Abidjan", "Africa/Abidjan"),
                            ("America/Nassau", "America/Nassau"),
                            ("Asia/Kamchatka", "Asia/Kamchatka"),
                            ("America/Santa_Isabel", "America/Santa_Isabel"),
                            ("Pacific/Kwajalein", "Pacific/Kwajalein"),
                            ("America/Montevideo", "America/Montevideo"),
                            ("Asia/Tokyo", "Asia/Tokyo"),
                            ("Europe/Simferopol", "Europe/Simferopol"),
                            ("Canada/Mountain", "Canada/Mountain"),
                            ("Etc/GMT-4", "Etc/GMT-4"),
                            ("Iceland", "Iceland"),
                            ("W-SU", "W-SU"),
                            ("Pacific/Yap", "Pacific/Yap"),
                            ("Etc/GMT-13", "Etc/GMT-13"),
                            ("Cuba", "Cuba"),
                            ("America/Santo_Domingo", "America/Santo_Domingo"),
                            ("Asia/Dhaka", "Asia/Dhaka"),
                            ("Asia/Novokuznetsk", "Asia/Novokuznetsk"),
                            ("Europe/Vienna", "Europe/Vienna"),
                            ("America/St_Thomas", "America/St_Thomas"),
                            ("Europe/Chisinau", "Europe/Chisinau"),
                            ("America/Indianapolis", "America/Indianapolis"),
                            ("Etc/GMT-5", "Etc/GMT-5"),
                            ("Europe/Zaporozhye", "Europe/Zaporozhye"),
                            ("Australia/Melbourne", "Australia/Melbourne"),
                            ("Indian/Kerguelen", "Indian/Kerguelen"),
                            ("US/Michigan", "US/Michigan"),
                            ("Asia/Aqtau", "Asia/Aqtau"),
                            ("Europe/Saratov", "Europe/Saratov"),
                            ("America/Antigua", "America/Antigua"),
                            ("Indian/Cocos", "Indian/Cocos"),
                            ("Pacific/Kiritimati", "Pacific/Kiritimati"),
                            ("Asia/Chongqing", "Asia/Chongqing"),
                            ("Africa/Bujumbura", "Africa/Bujumbura"),
                            ("Etc/GMT-9", "Etc/GMT-9"),
                            ("America/Los_Angeles", "America/Los_Angeles"),
                            ("Indian/Mahe", "Indian/Mahe"),
                            ("Asia/Yekaterinburg", "Asia/Yekaterinburg"),
                            ("America/Coral_Harbour", "America/Coral_Harbour"),
                            ("Asia/Macau", "Asia/Macau"),
                            ("Australia/Adelaide", "Australia/Adelaide"),
                            ("America/Sitka", "America/Sitka"),
                            ("Asia/Saigon", "Asia/Saigon"),
                            ("Asia/Jayapura", "Asia/Jayapura"),
                            ("Europe/Tirane", "Europe/Tirane"),
                            ("Etc/GMT-10", "Etc/GMT-10"),
                            ("Pacific/Wake", "Pacific/Wake"),
                            ("Pacific/Auckland", "Pacific/Auckland"),
                            ("America/Nipigon", "America/Nipigon"),
                            ("America/Fort_Nelson", "America/Fort_Nelson"),
                            ("Africa/Bissau", "Africa/Bissau"),
                            ("America/Menominee", "America/Menominee"),
                            ("Asia/Bishkek", "Asia/Bishkek"),
                            ("Libya", "Libya"),
                            ("America/Rainy_River", "America/Rainy_River"),
                            (
                                "America/Indiana/Petersburg",
                                "America/Indiana/Petersburg",
                            ),
                            ("Asia/Dili", "Asia/Dili"),
                            ("Asia/Khandyga", "Asia/Khandyga"),
                            ("Arctic/Longyearbyen", "Arctic/Longyearbyen"),
                            ("Asia/Vladivostok", "Asia/Vladivostok"),
                            ("Africa/Tripoli", "Africa/Tripoli"),
                            ("Asia/Qyzylorda", "Asia/Qyzylorda"),
                            ("Europe/Riga", "Europe/Riga"),
                            ("America/Marigot", "America/Marigot"),
                            ("America/Mexico_City", "America/Mexico_City"),
                            ("Africa/Juba", "Africa/Juba"),
                            ("Europe/Uzhgorod", "Europe/Uzhgorod"),
                            (
                                "America/Argentina/Catamarca",
                                "America/Argentina/Catamarca",
                            ),
                            ("US/Central", "US/Central"),
                            ("Asia/Yerevan", "Asia/Yerevan"),
                            ("Asia/Dushanbe", "Asia/Dushanbe"),
                            ("Asia/Pontianak", "Asia/Pontianak"),
                            ("America/Porto_Acre", "America/Porto_Acre"),
                            ("America/Argentina/Mendoza", "America/Argentina/Mendoza"),
                            ("Asia/Shanghai", "Asia/Shanghai"),
                            ("America/Cancun", "America/Cancun"),
                            ("NZ-CHAT", "NZ-CHAT"),
                            ("Europe/Paris", "Europe/Paris"),
                            ("UCT", "UCT"),
                            ("Pacific/Fiji", "Pacific/Fiji"),
                            ("Antarctica/Syowa", "Antarctica/Syowa"),
                            ("America/Guadeloupe", "America/Guadeloupe"),
                            ("Asia/Colombo", "Asia/Colombo"),
                            ("America/St_Vincent", "America/St_Vincent"),
                            ("America/Toronto", "America/Toronto"),
                            ("US/Hawaii", "US/Hawaii"),
                            ("America/Denver", "America/Denver"),
                            ("Pacific/Gambier", "Pacific/Gambier"),
                            ("Asia/Atyrau", "Asia/Atyrau"),
                            ("Europe/Helsinki", "Europe/Helsinki"),
                            ("MST", "MST"),
                            ("Asia/Kashgar", "Asia/Kashgar"),
                            ("America/Martinique", "America/Martinique"),
                            ("Universal", "Universal"),
                            ("America/Curacao", "America/Curacao"),
                            ("Pacific/Tongatapu", "Pacific/Tongatapu"),
                            ("America/Rosario", "America/Rosario"),
                            ("Etc/UCT", "Etc/UCT"),
                            ("Asia/Macao", "Asia/Macao"),
                            ("America/Blanc-Sablon", "America/Blanc-Sablon"),
                            ("America/Jamaica", "America/Jamaica"),
                            ("Navajo", "Navajo"),
                            ("Africa/Luanda", "Africa/Luanda"),
                            ("America/Noronha", "America/Noronha"),
                            ("America/Manaus", "America/Manaus"),
                            ("Atlantic/Bermuda", "Atlantic/Bermuda"),
                            ("Africa/Douala", "Africa/Douala"),
                            ("Asia/Omsk", "Asia/Omsk"),
                            ("Europe/Kirov", "Europe/Kirov"),
                            ("Asia/Dacca", "Asia/Dacca"),
                            ("Asia/Tashkent", "Asia/Tashkent"),
                            ("Europe/Istanbul", "Europe/Istanbul"),
                            ("Africa/Kinshasa", "Africa/Kinshasa"),
                            ("Europe/Vaduz", "Europe/Vaduz"),
                            ("Etc/Zulu", "Etc/Zulu"),
                            ("Europe/Athens", "Europe/Athens"),
                            ("America/Knox_IN", "America/Knox_IN"),
                            ("Europe/Mariehamn", "Europe/Mariehamn"),
                            ("Antarctica/Macquarie", "Antarctica/Macquarie"),
                            ("America/Dominica", "America/Dominica"),
                            ("Europe/Minsk", "Europe/Minsk"),
                            ("Australia/ACT", "Australia/ACT"),
                            ("Poland", "Poland"),
                            ("America/Creston", "America/Creston"),
                            ("Europe/Sofia", "Europe/Sofia"),
                            ("Indian/Comoro", "Indian/Comoro"),
                            (
                                "America/Kentucky/Monticello",
                                "America/Kentucky/Monticello",
                            ),
                            ("Turkey", "Turkey"),
                            ("Australia/Darwin", "Australia/Darwin"),
                            ("Africa/Lusaka", "Africa/Lusaka"),
                            ("Indian/Antananarivo", "Indian/Antananarivo"),
                            ("Pacific/Saipan", "Pacific/Saipan"),
                            ("Africa/Nouakchott", "Africa/Nouakchott"),
                            ("Europe/Ulyanovsk", "Europe/Ulyanovsk"),
                            ("Asia/Amman", "Asia/Amman"),
                            ("Australia/Brisbane", "Australia/Brisbane"),
                            ("America/Monterrey", "America/Monterrey"),
                            ("Africa/Niamey", "Africa/Niamey"),
                            ("Asia/Bahrain", "Asia/Bahrain"),
                            ("Atlantic/Azores", "Atlantic/Azores"),
                            ("America/Yellowknife", "America/Yellowknife"),
                            ("America/Merida", "America/Merida"),
                            ("America/Indiana/Tell_City", "America/Indiana/Tell_City"),
                            ("America/Indiana/Vevay", "America/Indiana/Vevay"),
                            ("Brazil/West", "Brazil/West"),
                            ("Antarctica/South_Pole", "Antarctica/South_Pole"),
                            ("Indian/Reunion", "Indian/Reunion"),
                            ("GMT0", "GMT0"),
                            ("Australia/West", "Australia/West"),
                            ("Pacific/Funafuti", "Pacific/Funafuti"),
                            ("Africa/Tunis", "Africa/Tunis"),
                            ("Africa/Casablanca", "Africa/Casablanca"),
                            ("America/Atikokan", "America/Atikokan"),
                            ("America/Godthab", "America/Godthab"),
                            ("Africa/Bamako", "Africa/Bamako"),
                            ("Asia/Harbin", "Asia/Harbin"),
                            ("Europe/Skopje", "Europe/Skopje"),
                            ("Asia/Urumqi", "Asia/Urumqi"),
                            ("US/Alaska", "US/Alaska"),
                            ("America/Campo_Grande", "America/Campo_Grande"),
                            (
                                "America/Argentina/San_Juan",
                                "America/Argentina/San_Juan",
                            ),
                            ("Asia/Jerusalem", "Asia/Jerusalem"),
                            ("Asia/Bangkok", "Asia/Bangkok"),
                            ("Portugal", "Portugal"),
                            ("Europe/Copenhagen", "Europe/Copenhagen"),
                            ("MST7MDT", "MST7MDT"),
                            ("America/Bahia_Banderas", "America/Bahia_Banderas"),
                            ("Pacific/Apia", "Pacific/Apia"),
                            ("Europe/Isle_of_Man", "Europe/Isle_of_Man"),
                            ("Europe/Vatican", "Europe/Vatican"),
                            ("America/Juneau", "America/Juneau"),
                            ("Australia/Broken_Hill", "Australia/Broken_Hill"),
                            ("Canada/Eastern", "Canada/Eastern"),
                            (
                                "America/Kentucky/Louisville",
                                "America/Kentucky/Louisville",
                            ),
                            ("America/Punta_Arenas", "America/Punta_Arenas"),
                            ("Europe/Guernsey", "Europe/Guernsey"),
                            ("Europe/Ljubljana", "Europe/Ljubljana"),
                            ("Africa/Accra", "Africa/Accra"),
                            ("Pacific/Marquesas", "Pacific/Marquesas"),
                            ("America/Regina", "America/Regina"),
                            ("America/St_Barthelemy", "America/St_Barthelemy"),
                            ("Etc/GMT+4", "Etc/GMT+4"),
                            ("Asia/Kuala_Lumpur", "Asia/Kuala_Lumpur"),
                            ("America/Puerto_Rico", "America/Puerto_Rico"),
                            ("America/Rio_Branco", "America/Rio_Branco"),
                            ("Indian/Christmas", "Indian/Christmas"),
                            ("Europe/Nicosia", "Europe/Nicosia"),
                            ("Asia/Thimbu", "Asia/Thimbu"),
                            ("Pacific/Tarawa", "Pacific/Tarawa"),
                            ("Pacific/Easter", "Pacific/Easter"),
                            ("Africa/Porto-Novo", "Africa/Porto-Novo"),
                            ("Asia/Samarkand", "Asia/Samarkand"),
                            ("Europe/Bucharest", "Europe/Bucharest"),
                            ("Asia/Kuwait", "Asia/Kuwait"),
                            ("America/Barbados", "America/Barbados"),
                            ("America/Atka", "America/Atka"),
                            ("Etc/Greenwich", "Etc/Greenwich"),
                            ("Etc/GMT+8", "Etc/GMT+8"),
                            ("America/Guatemala", "America/Guatemala"),
                            (
                                "America/Argentina/ComodRivadavia",
                                "America/Argentina/ComodRivadavia",
                            ),
                            ("America/Argentina/Tucuman", "America/Argentina/Tucuman"),
                            ("Iran", "Iran"),
                            ("Asia/Yakutsk", "Asia/Yakutsk"),
                            ("Pacific/Fakaofo", "Pacific/Fakaofo"),
                            ("America/Bogota", "America/Bogota"),
                            ("Etc/GMT+11", "Etc/GMT+11"),
                            ("Australia/Perth", "Australia/Perth"),
                            ("US/Pacific", "US/Pacific"),
                            ("Europe/Zurich", "Europe/Zurich"),
                            ("Atlantic/Reykjavik", "Atlantic/Reykjavik"),
                            ("America/Grenada", "America/Grenada"),
                            ("EET", "EET"),
                            ("Etc/GMT-7", "Etc/GMT-7"),
                            ("Africa/Lome", "Africa/Lome"),
                            ("America/Goose_Bay", "America/Goose_Bay"),
                            ("Asia/Chungking", "Asia/Chungking"),
                            ("America/Dawson", "America/Dawson"),
                            ("Australia/Sydney", "Australia/Sydney"),
                            ("America/Swift_Current", "America/Swift_Current"),
                            ("Asia/Dubai", "Asia/Dubai"),
                            ("America/Iqaluit", "America/Iqaluit"),
                            ("Pacific/Guam", "Pacific/Guam"),
                            ("Europe/Sarajevo", "Europe/Sarajevo"),
                            ("Europe/Stockholm", "Europe/Stockholm"),
                            ("America/Resolute", "America/Resolute"),
                            ("Asia/Barnaul", "Asia/Barnaul"),
                            ("Asia/Anadyr", "Asia/Anadyr"),
                            ("Australia/Tasmania", "Australia/Tasmania"),
                            ("Asia/Yangon", "Asia/Yangon"),
                            ("Asia/Ho_Chi_Minh", "Asia/Ho_Chi_Minh"),
                            ("Asia/Kuching", "Asia/Kuching"),
                            ("America/Scoresbysund", "America/Scoresbysund"),
                            ("US/Samoa", "US/Samoa"),
                            ("Europe/Amsterdam", "Europe/Amsterdam"),
                            ("Asia/Vientiane", "Asia/Vientiane"),
                            ("America/Santarem", "America/Santarem"),
                            ("America/Whitehorse", "America/Whitehorse"),
                            ("Europe/Gibraltar", "Europe/Gibraltar"),
                            ("Zulu", "Zulu"),
                            ("Africa/Sao_Tome", "Africa/Sao_Tome"),
                            ("Africa/Asmera", "Africa/Asmera"),
                            ("America/Guyana", "America/Guyana"),
                            ("America/Argentina/Salta", "America/Argentina/Salta"),
                            ("Etc/GMT-14", "Etc/GMT-14"),
                            ("Asia/Pyongyang", "Asia/Pyongyang"),
                            ("Europe/Belfast", "Europe/Belfast"),
                            ("America/Cayman", "America/Cayman"),
                            ("Europe/Monaco", "Europe/Monaco"),
                            ("Africa/Kampala", "Africa/Kampala"),
                            ("Pacific/Bougainville", "Pacific/Bougainville"),
                            ("Africa/Ceuta", "Africa/Ceuta"),
                            ("Africa/Maputo", "Africa/Maputo"),
                            ("Europe/Brussels", "Europe/Brussels"),
                            ("America/Belem", "America/Belem"),
                            ("Africa/Monrovia", "Africa/Monrovia"),
                            ("Mexico/BajaNorte", "Mexico/BajaNorte"),
                            ("Pacific/Palau", "Pacific/Palau"),
                            ("America/Chihuahua", "America/Chihuahua"),
                            ("America/Grand_Turk", "America/Grand_Turk"),
                            ("Europe/Zagreb", "Europe/Zagreb"),
                            ("Etc/GMT+9", "Etc/GMT+9"),
                            ("Asia/Qatar", "Asia/Qatar"),
                            ("Australia/Victoria", "Australia/Victoria"),
                            ("Asia/Kathmandu", "Asia/Kathmandu"),
                            ("America/Phoenix", "America/Phoenix"),
                            ("Pacific/Norfolk", "Pacific/Norfolk"),
                            ("America/Catamarca", "America/Catamarca"),
                            ("EST", "EST"),
                            ("America/Argentina/Ushuaia", "America/Argentina/Ushuaia"),
                            ("Etc/GMT+12", "Etc/GMT+12"),
                            ("Pacific/Pohnpei", "Pacific/Pohnpei"),
                            ("America/Tegucigalpa", "America/Tegucigalpa"),
                            ("America/Nome", "America/Nome"),
                            ("Australia/South", "Australia/South"),
                            ("Asia/Almaty", "Asia/Almaty"),
                            ("Europe/Dublin", "Europe/Dublin"),
                            ("Canada/Atlantic", "Canada/Atlantic"),
                            ("Asia/Ulan_Bator", "Asia/Ulan_Bator"),
                            ("Antarctica/Vostok", "Antarctica/Vostok"),
                            ("America/Boa_Vista", "America/Boa_Vista"),
                            ("Japan", "Japan"),
                            ("America/Detroit", "America/Detroit"),
                            ("America/Inuvik", "America/Inuvik"),
                            ("America/Halifax", "America/Halifax"),
                            ("PRC", "PRC"),
                            ("America/Panama", "America/Panama"),
                            ("Europe/Lisbon", "Europe/Lisbon"),
                            ("Asia/Taipei", "Asia/Taipei"),
                        ],
                        default="Asia/Kolkata",
                        max_length=50,
                        verbose_name="Time zone",
                    ),
                ),
                (
                    "profile_pic",
                    models.FileField(
                        blank=True,
                        max_length=1000,
                        null=True,
                        upload_to=creme.creme_core.models.auth.img_url,
                    ),
                ),
                (
                    "activation_key",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("key_expires", models.DateTimeField(blank=True, null=True)),
                ("skype_ID", models.CharField(blank=True, max_length=50, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("json_settings", models.TextField(default="{}", editable=False)),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "ordering": ("username", "-is_active"),
            },
        ),
        migrations.CreateModel(
            name="WorldSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "menu_icon",
                    models.ImageField(
                        blank=True, upload_to="creme_core", verbose_name="Menu icon"
                    ),
                ),
                (
                    "password_change_enabled",
                    models.BooleanField(
                        default=True,
                        verbose_name="Allow all users to change their own password?",
                    ),
                ),
                (
                    "password_reset_enabled",
                    models.BooleanField(
                        default=True,
                        help_text="This feature allows users to reset their password if they forgot it. The login page proposes to receive an email to start the reset process.",
                        verbose_name="Enable the «Lost password» feature?",
                    ),
                ),
                (
                    "user_name_change_enabled",
                    models.BooleanField(
                        default=True,
                        verbose_name="Can users change their own displayed name?",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "swappable": "CREME_CORE_WSETTINGS_MODEL",
            },
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timezone",
                    creme.creme_core.accounts.fields.TimeZoneField(
                        blank=True,
                        choices=[
                            ("Africa/Abidjan", "Africa/Abidjan"),
                            ("Africa/Accra", "Africa/Accra"),
                            ("Africa/Addis_Ababa", "Africa/Addis_Ababa"),
                            ("Africa/Algiers", "Africa/Algiers"),
                            ("Africa/Asmara", "Africa/Asmara"),
                            ("Africa/Asmera", "Africa/Asmera"),
                            ("Africa/Bamako", "Africa/Bamako"),
                            ("Africa/Bangui", "Africa/Bangui"),
                            ("Africa/Banjul", "Africa/Banjul"),
                            ("Africa/Bissau", "Africa/Bissau"),
                            ("Africa/Blantyre", "Africa/Blantyre"),
                            ("Africa/Brazzaville", "Africa/Brazzaville"),
                            ("Africa/Bujumbura", "Africa/Bujumbura"),
                            ("Africa/Cairo", "Africa/Cairo"),
                            ("Africa/Casablanca", "Africa/Casablanca"),
                            ("Africa/Ceuta", "Africa/Ceuta"),
                            ("Africa/Conakry", "Africa/Conakry"),
                            ("Africa/Dakar", "Africa/Dakar"),
                            ("Africa/Dar_es_Salaam", "Africa/Dar_es_Salaam"),
                            ("Africa/Djibouti", "Africa/Djibouti"),
                            ("Africa/Douala", "Africa/Douala"),
                            ("Africa/El_Aaiun", "Africa/El_Aaiun"),
                            ("Africa/Freetown", "Africa/Freetown"),
                            ("Africa/Gaborone", "Africa/Gaborone"),
                            ("Africa/Harare", "Africa/Harare"),
                            ("Africa/Johannesburg", "Africa/Johannesburg"),
                            ("Africa/Juba", "Africa/Juba"),
                            ("Africa/Kampala", "Africa/Kampala"),
                            ("Africa/Khartoum", "Africa/Khartoum"),
                            ("Africa/Kigali", "Africa/Kigali"),
                            ("Africa/Kinshasa", "Africa/Kinshasa"),
                            ("Africa/Lagos", "Africa/Lagos"),
                            ("Africa/Libreville", "Africa/Libreville"),
                            ("Africa/Lome", "Africa/Lome"),
                            ("Africa/Luanda", "Africa/Luanda"),
                            ("Africa/Lubumbashi", "Africa/Lubumbashi"),
                            ("Africa/Lusaka", "Africa/Lusaka"),
                            ("Africa/Malabo", "Africa/Malabo"),
                            ("Africa/Maputo", "Africa/Maputo"),
                            ("Africa/Maseru", "Africa/Maseru"),
                            ("Africa/Mbabane", "Africa/Mbabane"),
                            ("Africa/Mogadishu", "Africa/Mogadishu"),
                            ("Africa/Monrovia", "Africa/Monrovia"),
                            ("Africa/Nairobi", "Africa/Nairobi"),
                            ("Africa/Ndjamena", "Africa/Ndjamena"),
                            ("Africa/Niamey", "Africa/Niamey"),
                            ("Africa/Nouakchott", "Africa/Nouakchott"),
                            ("Africa/Ouagadougou", "Africa/Ouagadougou"),
                            ("Africa/Porto-Novo", "Africa/Porto-Novo"),
                            ("Africa/Sao_Tome", "Africa/Sao_Tome"),
                            ("Africa/Timbuktu", "Africa/Timbuktu"),
                            ("Africa/Tripoli", "Africa/Tripoli"),
                            ("Africa/Tunis", "Africa/Tunis"),
                            ("Africa/Windhoek", "Africa/Windhoek"),
                            ("America/Adak", "America/Adak"),
                            ("America/Anchorage", "America/Anchorage"),
                            ("America/Anguilla", "America/Anguilla"),
                            ("America/Antigua", "America/Antigua"),
                            ("America/Araguaina", "America/Araguaina"),
                            (
                                "America/Argentina/Buenos_Aires",
                                "America/Argentina/Buenos_Aires",
                            ),
                            (
                                "America/Argentina/Catamarca",
                                "America/Argentina/Catamarca",
                            ),
                            (
                                "America/Argentina/ComodRivadavia",
                                "America/Argentina/ComodRivadavia",
                            ),
                            ("America/Argentina/Cordoba", "America/Argentina/Cordoba"),
                            ("America/Argentina/Jujuy", "America/Argentina/Jujuy"),
                            (
                                "America/Argentina/La_Rioja",
                                "America/Argentina/La_Rioja",
                            ),
                            ("America/Argentina/Mendoza", "America/Argentina/Mendoza"),
                            (
                                "America/Argentina/Rio_Gallegos",
                                "America/Argentina/Rio_Gallegos",
                            ),
                            ("America/Argentina/Salta", "America/Argentina/Salta"),
                            (
                                "America/Argentina/San_Juan",
                                "America/Argentina/San_Juan",
                            ),
                            (
                                "America/Argentina/San_Luis",
                                "America/Argentina/San_Luis",
                            ),
                            ("America/Argentina/Tucuman", "America/Argentina/Tucuman"),
                            ("America/Argentina/Ushuaia", "America/Argentina/Ushuaia"),
                            ("America/Aruba", "America/Aruba"),
                            ("America/Asuncion", "America/Asuncion"),
                            ("America/Atikokan", "America/Atikokan"),
                            ("America/Atka", "America/Atka"),
                            ("America/Bahia", "America/Bahia"),
                            ("America/Bahia_Banderas", "America/Bahia_Banderas"),
                            ("America/Barbados", "America/Barbados"),
                            ("America/Belem", "America/Belem"),
                            ("America/Belize", "America/Belize"),
                            ("America/Blanc-Sablon", "America/Blanc-Sablon"),
                            ("America/Boa_Vista", "America/Boa_Vista"),
                            ("America/Bogota", "America/Bogota"),
                            ("America/Boise", "America/Boise"),
                            ("America/Buenos_Aires", "America/Buenos_Aires"),
                            ("America/Cambridge_Bay", "America/Cambridge_Bay"),
                            ("America/Campo_Grande", "America/Campo_Grande"),
                            ("America/Cancun", "America/Cancun"),
                            ("America/Caracas", "America/Caracas"),
                            ("America/Catamarca", "America/Catamarca"),
                            ("America/Cayenne", "America/Cayenne"),
                            ("America/Cayman", "America/Cayman"),
                            ("America/Chicago", "America/Chicago"),
                            ("America/Chihuahua", "America/Chihuahua"),
                            ("America/Coral_Harbour", "America/Coral_Harbour"),
                            ("America/Cordoba", "America/Cordoba"),
                            ("America/Costa_Rica", "America/Costa_Rica"),
                            ("America/Creston", "America/Creston"),
                            ("America/Cuiaba", "America/Cuiaba"),
                            ("America/Curacao", "America/Curacao"),
                            ("America/Danmarkshavn", "America/Danmarkshavn"),
                            ("America/Dawson", "America/Dawson"),
                            ("America/Dawson_Creek", "America/Dawson_Creek"),
                            ("America/Denver", "America/Denver"),
                            ("America/Detroit", "America/Detroit"),
                            ("America/Dominica", "America/Dominica"),
                            ("America/Edmonton", "America/Edmonton"),
                            ("America/Eirunepe", "America/Eirunepe"),
                            ("America/El_Salvador", "America/El_Salvador"),
                            ("America/Ensenada", "America/Ensenada"),
                            ("America/Fort_Wayne", "America/Fort_Wayne"),
                            ("America/Fortaleza", "America/Fortaleza"),
                            ("America/Glace_Bay", "America/Glace_Bay"),
                            ("America/Godthab", "America/Godthab"),
                            ("America/Goose_Bay", "America/Goose_Bay"),
                            ("America/Grand_Turk", "America/Grand_Turk"),
                            ("America/Grenada", "America/Grenada"),
                            ("America/Guadeloupe", "America/Guadeloupe"),
                            ("America/Guatemala", "America/Guatemala"),
                            ("America/Guayaquil", "America/Guayaquil"),
                            ("America/Guyana", "America/Guyana"),
                            ("America/Halifax", "America/Halifax"),
                            ("America/Havana", "America/Havana"),
                            ("America/Hermosillo", "America/Hermosillo"),
                            (
                                "America/Indiana/Indianapolis",
                                "America/Indiana/Indianapolis",
                            ),
                            ("America/Indiana/Knox", "America/Indiana/Knox"),
                            ("America/Indiana/Marengo", "America/Indiana/Marengo"),
                            (
                                "America/Indiana/Petersburg",
                                "America/Indiana/Petersburg",
                            ),
                            ("America/Indiana/Tell_City", "America/Indiana/Tell_City"),
                            ("America/Indiana/Vevay", "America/Indiana/Vevay"),
                            ("America/Indiana/Vincennes", "America/Indiana/Vincennes"),
                            ("America/Indiana/Winamac", "America/Indiana/Winamac"),
                            ("America/Indianapolis", "America/Indianapolis"),
                            ("America/Inuvik", "America/Inuvik"),
                            ("America/Iqaluit", "America/Iqaluit"),
                            ("America/Jamaica", "America/Jamaica"),
                            ("America/Jujuy", "America/Jujuy"),
                            ("America/Juneau", "America/Juneau"),
                            (
                                "America/Kentucky/Louisville",
                                "America/Kentucky/Louisville",
                            ),
                            (
                                "America/Kentucky/Monticello",
                                "America/Kentucky/Monticello",
                            ),
                            ("America/Knox_IN", "America/Knox_IN"),
                            ("America/Kralendijk", "America/Kralendijk"),
                            ("America/La_Paz", "America/La_Paz"),
                            ("America/Lima", "America/Lima"),
                            ("America/Los_Angeles", "America/Los_Angeles"),
                            ("America/Louisville", "America/Louisville"),
                            ("America/Lower_Princes", "America/Lower_Princes"),
                            ("America/Maceio", "America/Maceio"),
                            ("America/Managua", "America/Managua"),
                            ("America/Manaus", "America/Manaus"),
                            ("America/Marigot", "America/Marigot"),
                            ("America/Martinique", "America/Martinique"),
                            ("America/Matamoros", "America/Matamoros"),
                            ("America/Mazatlan", "America/Mazatlan"),
                            ("America/Mendoza", "America/Mendoza"),
                            ("America/Menominee", "America/Menominee"),
                            ("America/Merida", "America/Merida"),
                            ("America/Metlakatla", "America/Metlakatla"),
                            ("America/Mexico_City", "America/Mexico_City"),
                            ("America/Miquelon", "America/Miquelon"),
                            ("America/Moncton", "America/Moncton"),
                            ("America/Monterrey", "America/Monterrey"),
                            ("America/Montevideo", "America/Montevideo"),
                            ("America/Montreal", "America/Montreal"),
                            ("America/Montserrat", "America/Montserrat"),
                            ("America/Nassau", "America/Nassau"),
                            ("America/New_York", "America/New_York"),
                            ("America/Nipigon", "America/Nipigon"),
                            ("America/Nome", "America/Nome"),
                            ("America/Noronha", "America/Noronha"),
                            (
                                "America/North_Dakota/Beulah",
                                "America/North_Dakota/Beulah",
                            ),
                            (
                                "America/North_Dakota/Center",
                                "America/North_Dakota/Center",
                            ),
                            (
                                "America/North_Dakota/New_Salem",
                                "America/North_Dakota/New_Salem",
                            ),
                            ("America/Ojinaga", "America/Ojinaga"),
                            ("America/Panama", "America/Panama"),
                            ("America/Pangnirtung", "America/Pangnirtung"),
                            ("America/Paramaribo", "America/Paramaribo"),
                            ("America/Phoenix", "America/Phoenix"),
                            ("America/Port-au-Prince", "America/Port-au-Prince"),
                            ("America/Port_of_Spain", "America/Port_of_Spain"),
                            ("America/Porto_Acre", "America/Porto_Acre"),
                            ("America/Porto_Velho", "America/Porto_Velho"),
                            ("America/Puerto_Rico", "America/Puerto_Rico"),
                            ("America/Rainy_River", "America/Rainy_River"),
                            ("America/Rankin_Inlet", "America/Rankin_Inlet"),
                            ("America/Recife", "America/Recife"),
                            ("America/Regina", "America/Regina"),
                            ("America/Resolute", "America/Resolute"),
                            ("America/Rio_Branco", "America/Rio_Branco"),
                            ("America/Rosario", "America/Rosario"),
                            ("America/Santa_Isabel", "America/Santa_Isabel"),
                            ("America/Santarem", "America/Santarem"),
                            ("America/Santiago", "America/Santiago"),
                            ("America/Santo_Domingo", "America/Santo_Domingo"),
                            ("America/Sao_Paulo", "America/Sao_Paulo"),
                            ("America/Scoresbysund", "America/Scoresbysund"),
                            ("America/Shiprock", "America/Shiprock"),
                            ("America/Sitka", "America/Sitka"),
                            ("America/St_Barthelemy", "America/St_Barthelemy"),
                            ("America/St_Johns", "America/St_Johns"),
                            ("America/St_Kitts", "America/St_Kitts"),
                            ("America/St_Lucia", "America/St_Lucia"),
                            ("America/St_Thomas", "America/St_Thomas"),
                            ("America/St_Vincent", "America/St_Vincent"),
                            ("America/Swift_Current", "America/Swift_Current"),
                            ("America/Tegucigalpa", "America/Tegucigalpa"),
                            ("America/Thule", "America/Thule"),
                            ("America/Thunder_Bay", "America/Thunder_Bay"),
                            ("America/Tijuana", "America/Tijuana"),
                            ("America/Toronto", "America/Toronto"),
                            ("America/Tortola", "America/Tortola"),
                            ("America/Vancouver", "America/Vancouver"),
                            ("America/Virgin", "America/Virgin"),
                            ("America/Whitehorse", "America/Whitehorse"),
                            ("America/Winnipeg", "America/Winnipeg"),
                            ("America/Yakutat", "America/Yakutat"),
                            ("America/Yellowknife", "America/Yellowknife"),
                            ("Antarctica/Casey", "Antarctica/Casey"),
                            ("Antarctica/Davis", "Antarctica/Davis"),
                            ("Antarctica/DumontDUrville", "Antarctica/DumontDUrville"),
                            ("Antarctica/Macquarie", "Antarctica/Macquarie"),
                            ("Antarctica/Mawson", "Antarctica/Mawson"),
                            ("Antarctica/McMurdo", "Antarctica/McMurdo"),
                            ("Antarctica/Palmer", "Antarctica/Palmer"),
                            ("Antarctica/Rothera", "Antarctica/Rothera"),
                            ("Antarctica/South_Pole", "Antarctica/South_Pole"),
                            ("Antarctica/Syowa", "Antarctica/Syowa"),
                            ("Antarctica/Troll", "Antarctica/Troll"),
                            ("Antarctica/Vostok", "Antarctica/Vostok"),
                            ("Arctic/Longyearbyen", "Arctic/Longyearbyen"),
                            ("Asia/Aden", "Asia/Aden"),
                            ("Asia/Almaty", "Asia/Almaty"),
                            ("Asia/Amman", "Asia/Amman"),
                            ("Asia/Anadyr", "Asia/Anadyr"),
                            ("Asia/Aqtau", "Asia/Aqtau"),
                            ("Asia/Aqtobe", "Asia/Aqtobe"),
                            ("Asia/Ashgabat", "Asia/Ashgabat"),
                            ("Asia/Ashkhabad", "Asia/Ashkhabad"),
                            ("Asia/Baghdad", "Asia/Baghdad"),
                            ("Asia/Bahrain", "Asia/Bahrain"),
                            ("Asia/Baku", "Asia/Baku"),
                            ("Asia/Bangkok", "Asia/Bangkok"),
                            ("Asia/Beirut", "Asia/Beirut"),
                            ("Asia/Bishkek", "Asia/Bishkek"),
                            ("Asia/Brunei", "Asia/Brunei"),
                            ("Asia/Calcutta", "Asia/Calcutta"),
                            ("Asia/Chita", "Asia/Chita"),
                            ("Asia/Choibalsan", "Asia/Choibalsan"),
                            ("Asia/Chongqing", "Asia/Chongqing"),
                            ("Asia/Chungking", "Asia/Chungking"),
                            ("Asia/Colombo", "Asia/Colombo"),
                            ("Asia/Dacca", "Asia/Dacca"),
                            ("Asia/Damascus", "Asia/Damascus"),
                            ("Asia/Dhaka", "Asia/Dhaka"),
                            ("Asia/Dili", "Asia/Dili"),
                            ("Asia/Dubai", "Asia/Dubai"),
                            ("Asia/Dushanbe", "Asia/Dushanbe"),
                            ("Asia/Gaza", "Asia/Gaza"),
                            ("Asia/Harbin", "Asia/Harbin"),
                            ("Asia/Hebron", "Asia/Hebron"),
                            ("Asia/Ho_Chi_Minh", "Asia/Ho_Chi_Minh"),
                            ("Asia/Hong_Kong", "Asia/Hong_Kong"),
                            ("Asia/Hovd", "Asia/Hovd"),
                            ("Asia/Irkutsk", "Asia/Irkutsk"),
                            ("Asia/Istanbul", "Asia/Istanbul"),
                            ("Asia/Jakarta", "Asia/Jakarta"),
                            ("Asia/Jayapura", "Asia/Jayapura"),
                            ("Asia/Jerusalem", "Asia/Jerusalem"),
                            ("Asia/Kabul", "Asia/Kabul"),
                            ("Asia/Kamchatka", "Asia/Kamchatka"),
                            ("Asia/Karachi", "Asia/Karachi"),
                            ("Asia/Kashgar", "Asia/Kashgar"),
                            ("Asia/Kathmandu", "Asia/Kathmandu"),
                            ("Asia/Katmandu", "Asia/Katmandu"),
                            ("Asia/Khandyga", "Asia/Khandyga"),
                            ("Asia/Kolkata", "Asia/Kolkata"),
                            ("Asia/Krasnoyarsk", "Asia/Krasnoyarsk"),
                            ("Asia/Kuala_Lumpur", "Asia/Kuala_Lumpur"),
                            ("Asia/Kuching", "Asia/Kuching"),
                            ("Asia/Kuwait", "Asia/Kuwait"),
                            ("Asia/Macao", "Asia/Macao"),
                            ("Asia/Macau", "Asia/Macau"),
                            ("Asia/Magadan", "Asia/Magadan"),
                            ("Asia/Makassar", "Asia/Makassar"),
                            ("Asia/Manila", "Asia/Manila"),
                            ("Asia/Muscat", "Asia/Muscat"),
                            ("Asia/Nicosia", "Asia/Nicosia"),
                            ("Asia/Novokuznetsk", "Asia/Novokuznetsk"),
                            ("Asia/Novosibirsk", "Asia/Novosibirsk"),
                            ("Asia/Omsk", "Asia/Omsk"),
                            ("Asia/Oral", "Asia/Oral"),
                            ("Asia/Phnom_Penh", "Asia/Phnom_Penh"),
                            ("Asia/Pontianak", "Asia/Pontianak"),
                            ("Asia/Pyongyang", "Asia/Pyongyang"),
                            ("Asia/Qatar", "Asia/Qatar"),
                            ("Asia/Qyzylorda", "Asia/Qyzylorda"),
                            ("Asia/Rangoon", "Asia/Rangoon"),
                            ("Asia/Riyadh", "Asia/Riyadh"),
                            ("Asia/Saigon", "Asia/Saigon"),
                            ("Asia/Sakhalin", "Asia/Sakhalin"),
                            ("Asia/Samarkand", "Asia/Samarkand"),
                            ("Asia/Seoul", "Asia/Seoul"),
                            ("Asia/Shanghai", "Asia/Shanghai"),
                            ("Asia/Singapore", "Asia/Singapore"),
                            ("Asia/Srednekolymsk", "Asia/Srednekolymsk"),
                            ("Asia/Taipei", "Asia/Taipei"),
                            ("Asia/Tashkent", "Asia/Tashkent"),
                            ("Asia/Tbilisi", "Asia/Tbilisi"),
                            ("Asia/Tehran", "Asia/Tehran"),
                            ("Asia/Tel_Aviv", "Asia/Tel_Aviv"),
                            ("Asia/Thimbu", "Asia/Thimbu"),
                            ("Asia/Thimphu", "Asia/Thimphu"),
                            ("Asia/Tokyo", "Asia/Tokyo"),
                            ("Asia/Ujung_Pandang", "Asia/Ujung_Pandang"),
                            ("Asia/Ulaanbaatar", "Asia/Ulaanbaatar"),
                            ("Asia/Ulan_Bator", "Asia/Ulan_Bator"),
                            ("Asia/Urumqi", "Asia/Urumqi"),
                            ("Asia/Ust-Nera", "Asia/Ust-Nera"),
                            ("Asia/Vientiane", "Asia/Vientiane"),
                            ("Asia/Vladivostok", "Asia/Vladivostok"),
                            ("Asia/Yakutsk", "Asia/Yakutsk"),
                            ("Asia/Yekaterinburg", "Asia/Yekaterinburg"),
                            ("Asia/Yerevan", "Asia/Yerevan"),
                            ("Atlantic/Azores", "Atlantic/Azores"),
                            ("Atlantic/Bermuda", "Atlantic/Bermuda"),
                            ("Atlantic/Canary", "Atlantic/Canary"),
                            ("Atlantic/Cape_Verde", "Atlantic/Cape_Verde"),
                            ("Atlantic/Faeroe", "Atlantic/Faeroe"),
                            ("Atlantic/Faroe", "Atlantic/Faroe"),
                            ("Atlantic/Jan_Mayen", "Atlantic/Jan_Mayen"),
                            ("Atlantic/Madeira", "Atlantic/Madeira"),
                            ("Atlantic/Reykjavik", "Atlantic/Reykjavik"),
                            ("Atlantic/South_Georgia", "Atlantic/South_Georgia"),
                            ("Atlantic/St_Helena", "Atlantic/St_Helena"),
                            ("Atlantic/Stanley", "Atlantic/Stanley"),
                            ("Australia/ACT", "Australia/ACT"),
                            ("Australia/Adelaide", "Australia/Adelaide"),
                            ("Australia/Brisbane", "Australia/Brisbane"),
                            ("Australia/Broken_Hill", "Australia/Broken_Hill"),
                            ("Australia/Canberra", "Australia/Canberra"),
                            ("Australia/Currie", "Australia/Currie"),
                            ("Australia/Darwin", "Australia/Darwin"),
                            ("Australia/Eucla", "Australia/Eucla"),
                            ("Australia/Hobart", "Australia/Hobart"),
                            ("Australia/LHI", "Australia/LHI"),
                            ("Australia/Lindeman", "Australia/Lindeman"),
                            ("Australia/Lord_Howe", "Australia/Lord_Howe"),
                            ("Australia/Melbourne", "Australia/Melbourne"),
                            ("Australia/NSW", "Australia/NSW"),
                            ("Australia/North", "Australia/North"),
                            ("Australia/Perth", "Australia/Perth"),
                            ("Australia/Queensland", "Australia/Queensland"),
                            ("Australia/South", "Australia/South"),
                            ("Australia/Sydney", "Australia/Sydney"),
                            ("Australia/Tasmania", "Australia/Tasmania"),
                            ("Australia/Victoria", "Australia/Victoria"),
                            ("Australia/West", "Australia/West"),
                            ("Australia/Yancowinna", "Australia/Yancowinna"),
                            ("Brazil/Acre", "Brazil/Acre"),
                            ("Brazil/DeNoronha", "Brazil/DeNoronha"),
                            ("Brazil/East", "Brazil/East"),
                            ("Brazil/West", "Brazil/West"),
                            ("CET", "CET"),
                            ("CST6CDT", "CST6CDT"),
                            ("Canada/Atlantic", "Canada/Atlantic"),
                            ("Canada/Central", "Canada/Central"),
                            ("Canada/East-Saskatchewan", "Canada/East-Saskatchewan"),
                            ("Canada/Eastern", "Canada/Eastern"),
                            ("Canada/Mountain", "Canada/Mountain"),
                            ("Canada/Newfoundland", "Canada/Newfoundland"),
                            ("Canada/Pacific", "Canada/Pacific"),
                            ("Canada/Saskatchewan", "Canada/Saskatchewan"),
                            ("Canada/Yukon", "Canada/Yukon"),
                            ("Chile/Continental", "Chile/Continental"),
                            ("Chile/EasterIsland", "Chile/EasterIsland"),
                            ("Cuba", "Cuba"),
                            ("EET", "EET"),
                            ("EST", "EST"),
                            ("EST5EDT", "EST5EDT"),
                            ("Egypt", "Egypt"),
                            ("Eire", "Eire"),
                            ("Etc/GMT", "Etc/GMT"),
                            ("Etc/GMT+0", "Etc/GMT+0"),
                            ("Etc/GMT+1", "Etc/GMT+1"),
                            ("Etc/GMT+10", "Etc/GMT+10"),
                            ("Etc/GMT+11", "Etc/GMT+11"),
                            ("Etc/GMT+12", "Etc/GMT+12"),
                            ("Etc/GMT+2", "Etc/GMT+2"),
                            ("Etc/GMT+3", "Etc/GMT+3"),
                            ("Etc/GMT+4", "Etc/GMT+4"),
                            ("Etc/GMT+5", "Etc/GMT+5"),
                            ("Etc/GMT+6", "Etc/GMT+6"),
                            ("Etc/GMT+7", "Etc/GMT+7"),
                            ("Etc/GMT+8", "Etc/GMT+8"),
                            ("Etc/GMT+9", "Etc/GMT+9"),
                            ("Etc/GMT-0", "Etc/GMT-0"),
                            ("Etc/GMT-1", "Etc/GMT-1"),
                            ("Etc/GMT-10", "Etc/GMT-10"),
                            ("Etc/GMT-11", "Etc/GMT-11"),
                            ("Etc/GMT-12", "Etc/GMT-12"),
                            ("Etc/GMT-13", "Etc/GMT-13"),
                            ("Etc/GMT-14", "Etc/GMT-14"),
                            ("Etc/GMT-2", "Etc/GMT-2"),
                            ("Etc/GMT-3", "Etc/GMT-3"),
                            ("Etc/GMT-4", "Etc/GMT-4"),
                            ("Etc/GMT-5", "Etc/GMT-5"),
                            ("Etc/GMT-6", "Etc/GMT-6"),
                            ("Etc/GMT-7", "Etc/GMT-7"),
                            ("Etc/GMT-8", "Etc/GMT-8"),
                            ("Etc/GMT-9", "Etc/GMT-9"),
                            ("Etc/GMT0", "Etc/GMT0"),
                            ("Etc/Greenwich", "Etc/Greenwich"),
                            ("Etc/UCT", "Etc/UCT"),
                            ("Etc/UTC", "Etc/UTC"),
                            ("Etc/Universal", "Etc/Universal"),
                            ("Etc/Zulu", "Etc/Zulu"),
                            ("Europe/Amsterdam", "Europe/Amsterdam"),
                            ("Europe/Andorra", "Europe/Andorra"),
                            ("Europe/Athens", "Europe/Athens"),
                            ("Europe/Belfast", "Europe/Belfast"),
                            ("Europe/Belgrade", "Europe/Belgrade"),
                            ("Europe/Berlin", "Europe/Berlin"),
                            ("Europe/Bratislava", "Europe/Bratislava"),
                            ("Europe/Brussels", "Europe/Brussels"),
                            ("Europe/Bucharest", "Europe/Bucharest"),
                            ("Europe/Budapest", "Europe/Budapest"),
                            ("Europe/Busingen", "Europe/Busingen"),
                            ("Europe/Chisinau", "Europe/Chisinau"),
                            ("Europe/Copenhagen", "Europe/Copenhagen"),
                            ("Europe/Dublin", "Europe/Dublin"),
                            ("Europe/Gibraltar", "Europe/Gibraltar"),
                            ("Europe/Guernsey", "Europe/Guernsey"),
                            ("Europe/Helsinki", "Europe/Helsinki"),
                            ("Europe/Isle_of_Man", "Europe/Isle_of_Man"),
                            ("Europe/Istanbul", "Europe/Istanbul"),
                            ("Europe/Jersey", "Europe/Jersey"),
                            ("Europe/Kaliningrad", "Europe/Kaliningrad"),
                            ("Europe/Kiev", "Europe/Kiev"),
                            ("Europe/Lisbon", "Europe/Lisbon"),
                            ("Europe/Ljubljana", "Europe/Ljubljana"),
                            ("Europe/London", "Europe/London"),
                            ("Europe/Luxembourg", "Europe/Luxembourg"),
                            ("Europe/Madrid", "Europe/Madrid"),
                            ("Europe/Malta", "Europe/Malta"),
                            ("Europe/Mariehamn", "Europe/Mariehamn"),
                            ("Europe/Minsk", "Europe/Minsk"),
                            ("Europe/Monaco", "Europe/Monaco"),
                            ("Europe/Moscow", "Europe/Moscow"),
                            ("Europe/Nicosia", "Europe/Nicosia"),
                            ("Europe/Oslo", "Europe/Oslo"),
                            ("Europe/Paris", "Europe/Paris"),
                            ("Europe/Podgorica", "Europe/Podgorica"),
                            ("Europe/Prague", "Europe/Prague"),
                            ("Europe/Riga", "Europe/Riga"),
                            ("Europe/Rome", "Europe/Rome"),
                            ("Europe/Samara", "Europe/Samara"),
                            ("Europe/San_Marino", "Europe/San_Marino"),
                            ("Europe/Sarajevo", "Europe/Sarajevo"),
                            ("Europe/Simferopol", "Europe/Simferopol"),
                            ("Europe/Skopje", "Europe/Skopje"),
                            ("Europe/Sofia", "Europe/Sofia"),
                            ("Europe/Stockholm", "Europe/Stockholm"),
                            ("Europe/Tallinn", "Europe/Tallinn"),
                            ("Europe/Tirane", "Europe/Tirane"),
                            ("Europe/Tiraspol", "Europe/Tiraspol"),
                            ("Europe/Uzhgorod", "Europe/Uzhgorod"),
                            ("Europe/Vaduz", "Europe/Vaduz"),
                            ("Europe/Vatican", "Europe/Vatican"),
                            ("Europe/Vienna", "Europe/Vienna"),
                            ("Europe/Vilnius", "Europe/Vilnius"),
                            ("Europe/Volgograd", "Europe/Volgograd"),
                            ("Europe/Warsaw", "Europe/Warsaw"),
                            ("Europe/Zagreb", "Europe/Zagreb"),
                            ("Europe/Zaporozhye", "Europe/Zaporozhye"),
                            ("Europe/Zurich", "Europe/Zurich"),
                            ("GB", "GB"),
                            ("GB-Eire", "GB-Eire"),
                            ("GMT", "GMT"),
                            ("GMT+0", "GMT+0"),
                            ("GMT-0", "GMT-0"),
                            ("GMT0", "GMT0"),
                            ("Greenwich", "Greenwich"),
                            ("HST", "HST"),
                            ("Hongkong", "Hongkong"),
                            ("Iceland", "Iceland"),
                            ("Indian/Antananarivo", "Indian/Antananarivo"),
                            ("Indian/Chagos", "Indian/Chagos"),
                            ("Indian/Christmas", "Indian/Christmas"),
                            ("Indian/Cocos", "Indian/Cocos"),
                            ("Indian/Comoro", "Indian/Comoro"),
                            ("Indian/Kerguelen", "Indian/Kerguelen"),
                            ("Indian/Mahe", "Indian/Mahe"),
                            ("Indian/Maldives", "Indian/Maldives"),
                            ("Indian/Mauritius", "Indian/Mauritius"),
                            ("Indian/Mayotte", "Indian/Mayotte"),
                            ("Indian/Reunion", "Indian/Reunion"),
                            ("Iran", "Iran"),
                            ("Israel", "Israel"),
                            ("Jamaica", "Jamaica"),
                            ("Japan", "Japan"),
                            ("Kwajalein", "Kwajalein"),
                            ("Libya", "Libya"),
                            ("MET", "MET"),
                            ("MST", "MST"),
                            ("MST7MDT", "MST7MDT"),
                            ("Mexico/BajaNorte", "Mexico/BajaNorte"),
                            ("Mexico/BajaSur", "Mexico/BajaSur"),
                            ("Mexico/General", "Mexico/General"),
                            ("NZ", "NZ"),
                            ("NZ-CHAT", "NZ-CHAT"),
                            ("Navajo", "Navajo"),
                            ("PRC", "PRC"),
                            ("PST8PDT", "PST8PDT"),
                            ("Pacific/Apia", "Pacific/Apia"),
                            ("Pacific/Auckland", "Pacific/Auckland"),
                            ("Pacific/Bougainville", "Pacific/Bougainville"),
                            ("Pacific/Chatham", "Pacific/Chatham"),
                            ("Pacific/Chuuk", "Pacific/Chuuk"),
                            ("Pacific/Easter", "Pacific/Easter"),
                            ("Pacific/Efate", "Pacific/Efate"),
                            ("Pacific/Enderbury", "Pacific/Enderbury"),
                            ("Pacific/Fakaofo", "Pacific/Fakaofo"),
                            ("Pacific/Fiji", "Pacific/Fiji"),
                            ("Pacific/Funafuti", "Pacific/Funafuti"),
                            ("Pacific/Galapagos", "Pacific/Galapagos"),
                            ("Pacific/Gambier", "Pacific/Gambier"),
                            ("Pacific/Guadalcanal", "Pacific/Guadalcanal"),
                            ("Pacific/Guam", "Pacific/Guam"),
                            ("Pacific/Honolulu", "Pacific/Honolulu"),
                            ("Pacific/Johnston", "Pacific/Johnston"),
                            ("Pacific/Kiritimati", "Pacific/Kiritimati"),
                            ("Pacific/Kosrae", "Pacific/Kosrae"),
                            ("Pacific/Kwajalein", "Pacific/Kwajalein"),
                            ("Pacific/Majuro", "Pacific/Majuro"),
                            ("Pacific/Marquesas", "Pacific/Marquesas"),
                            ("Pacific/Midway", "Pacific/Midway"),
                            ("Pacific/Nauru", "Pacific/Nauru"),
                            ("Pacific/Niue", "Pacific/Niue"),
                            ("Pacific/Norfolk", "Pacific/Norfolk"),
                            ("Pacific/Noumea", "Pacific/Noumea"),
                            ("Pacific/Pago_Pago", "Pacific/Pago_Pago"),
                            ("Pacific/Palau", "Pacific/Palau"),
                            ("Pacific/Pitcairn", "Pacific/Pitcairn"),
                            ("Pacific/Pohnpei", "Pacific/Pohnpei"),
                            ("Pacific/Ponape", "Pacific/Ponape"),
                            ("Pacific/Port_Moresby", "Pacific/Port_Moresby"),
                            ("Pacific/Rarotonga", "Pacific/Rarotonga"),
                            ("Pacific/Saipan", "Pacific/Saipan"),
                            ("Pacific/Samoa", "Pacific/Samoa"),
                            ("Pacific/Tahiti", "Pacific/Tahiti"),
                            ("Pacific/Tarawa", "Pacific/Tarawa"),
                            ("Pacific/Tongatapu", "Pacific/Tongatapu"),
                            ("Pacific/Truk", "Pacific/Truk"),
                            ("Pacific/Wake", "Pacific/Wake"),
                            ("Pacific/Wallis", "Pacific/Wallis"),
                            ("Pacific/Yap", "Pacific/Yap"),
                            ("Poland", "Poland"),
                            ("Portugal", "Portugal"),
                            ("ROC", "ROC"),
                            ("ROK", "ROK"),
                            ("Singapore", "Singapore"),
                            ("Turkey", "Turkey"),
                            ("UCT", "UCT"),
                            ("US/Alaska", "US/Alaska"),
                            ("US/Aleutian", "US/Aleutian"),
                            ("US/Arizona", "US/Arizona"),
                            ("US/Central", "US/Central"),
                            ("US/East-Indiana", "US/East-Indiana"),
                            ("US/Eastern", "US/Eastern"),
                            ("US/Hawaii", "US/Hawaii"),
                            ("US/Indiana-Starke", "US/Indiana-Starke"),
                            ("US/Michigan", "US/Michigan"),
                            ("US/Mountain", "US/Mountain"),
                            ("US/Pacific", "US/Pacific"),
                            ("US/Pacific-New", "US/Pacific-New"),
                            ("US/Samoa", "US/Samoa"),
                            ("UTC", "UTC"),
                            ("Universal", "Universal"),
                            ("W-SU", "W-SU"),
                            ("WET", "WET"),
                            ("Zulu", "Zulu"),
                        ],
                        default="",
                        max_length=100,
                        verbose_name="timezone",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("af", "Afrikaans"),
                            ("ar", "العربيّة"),
                            ("ast", "asturian"),
                            ("az", "Azərbaycanca"),
                            ("bg", "български"),
                            ("be", "беларуская"),
                            ("bn", "বাংলা"),
                            ("br", "brezhoneg"),
                            ("bs", "bosanski"),
                            ("ca", "català"),
                            ("cs", "česky"),
                            ("cy", "Cymraeg"),
                            ("da", "dansk"),
                            ("de", "Deutsch"),
                            ("el", "Ελληνικά"),
                            ("en", "English"),
                            ("en-au", "Australian English"),
                            ("en-gb", "British English"),
                            ("eo", "Esperanto"),
                            ("es", "español"),
                            ("es-ar", "español de Argentina"),
                            ("es-mx", "español de Mexico"),
                            ("es-ni", "español de Nicaragua"),
                            ("es-ve", "español de Venezuela"),
                            ("et", "eesti"),
                            ("eu", "Basque"),
                            ("fa", "فارسی"),
                            ("fi", "suomi"),
                            ("fr", "français"),
                            ("fy", "frysk"),
                            ("ga", "Gaeilge"),
                            ("gl", "galego"),
                            ("he", "עברית"),
                            ("hi", "Hindi"),
                            ("hr", "Hrvatski"),
                            ("hu", "Magyar"),
                            ("ia", "Interlingua"),
                            ("id", "Bahasa Indonesia"),
                            ("io", "ido"),
                            ("is", "Íslenska"),
                            ("it", "italiano"),
                            ("ja", "日本語"),
                            ("ka", "ქართული"),
                            ("kk", "Қазақ"),
                            ("km", "Khmer"),
                            ("kn", "Kannada"),
                            ("ko", "한국어"),
                            ("lb", "Lëtzebuergesch"),
                            ("lt", "Lietuviškai"),
                            ("lv", "latvieš"),
                            ("mk", "Македонски"),
                            ("ml", "Malayalam"),
                            ("mn", "Mongolian"),
                            ("mr", "मराठी"),
                            ("my", "မြန်မာဘာသာ"),
                            ("nb", "norsk (bokmål)"),
                            ("ne", "नेपाली"),
                            ("nl", "Nederlands"),
                            ("nn", "norsk (nynorsk)"),
                            ("os", "Ирон"),
                            ("pa", "Punjabi"),
                            ("pl", "polski"),
                            ("pt", "Português"),
                            ("pt-br", "Português Brasileiro"),
                            ("ro", "Română"),
                            ("ru", "Русский"),
                            ("sk", "slovenský"),
                            ("sl", "Slovenščina"),
                            ("sq", "shqip"),
                            ("sr", "српски"),
                            ("sr-latn", "srpski (latinica)"),
                            ("sv", "svenska"),
                            ("sw", "Kiswahili"),
                            ("ta", "தமிழ்"),
                            ("te", "తెలుగు"),
                            ("th", "ภาษาไทย"),
                            ("tr", "Türkçe"),
                            ("tt", "Татарча"),
                            ("udm", "Удмурт"),
                            ("uk", "Українська"),
                            ("ur", "اردو"),
                            ("vi", "Tiếng Việt"),
                            ("zh-cn", "简体中文"),
                            ("zh-hans", "简体中文"),
                            ("zh-hant", "繁體中文"),
                            ("zh-tw", "繁體中文"),
                        ],
                        default="vi",
                        max_length=10,
                        verbose_name="language",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AccountDeletion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                (
                    "date_requested",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date requested"
                    ),
                ),
                (
                    "date_expunged",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="date expunged"
                    ),
                ),
            ],
            options={
                "verbose_name": "account deletion",
                "verbose_name_plural": "account deletions",
            },
        ),
        migrations.CreateModel(
            name="APISettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.TextField()),
                ("apikey", models.CharField(blank=True, max_length=16)),
                ("website", models.URLField(max_length=255, null=True)),
                ("created_on", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ("-created_on",),
            },
        ),
        migrations.CreateModel(
            name="CaseSensitivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name="CremeEntity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    creme.creme_core.models.fields.CreationDateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="Creation date",
                    ),
                ),
                (
                    "modified",
                    creme.creme_core.models.fields.ModificationDateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="Last modification",
                    ),
                ),
                (
                    "header_filter_search_field",
                    models.CharField(editable=False, max_length=200),
                ),
                ("is_deleted", models.BooleanField(default=False, editable=False)),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                (
                    "entity_type",
                    creme.creme_core.models.fields.CTypeForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Entity",
                "verbose_name_plural": "Entities",
                "ordering": ("header_filter_search_field",),
            },
        ),
        migrations.CreateModel(
            name="CremePropertyType",
            fields=[
                (
                    "id",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                (
                    "text",
                    models.CharField(max_length=200, unique=True, verbose_name="Text"),
                ),
                ("is_custom", models.BooleanField(default=False, editable=False)),
                (
                    "is_copiable",
                    models.BooleanField(default=True, verbose_name="Is copiable"),
                ),
                (
                    "enabled",
                    models.BooleanField(
                        default=True, editable=False, verbose_name="Enabled?"
                    ),
                ),
                (
                    "subject_ctypes",
                    models.ManyToManyField(
                        blank=True,
                        related_name="subject_ctypes_creme_property_set",
                        to="contenttypes.contenttype",
                        verbose_name="Applies on entities with following types",
                    ),
                ),
            ],
            options={
                "verbose_name": "Type of property",
                "verbose_name_plural": "Types of property",
                "ordering": ("text",),
            },
        ),
        migrations.CreateModel(
            name="Currency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                ("name", models.CharField(max_length=100, verbose_name="Currency")),
                (
                    "local_symbol",
                    models.CharField(max_length=100, verbose_name="Local symbol"),
                ),
                (
                    "international_symbol",
                    models.CharField(
                        max_length=100, verbose_name="International symbol"
                    ),
                ),
            ],
            options={
                "verbose_name": "Currency",
                "verbose_name_plural": "Currencies",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="CustomField",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Field name")),
                (
                    "field_type",
                    models.PositiveSmallIntegerField(verbose_name="Field type"),
                ),
                (
                    "is_required",
                    models.BooleanField(
                        default=False,
                        help_text="A required custom-field must be filled when a new entity is created ; existing entities are not immediately impacted.",
                        verbose_name="Is required?",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, editable=False, verbose_name="Is deleted?"
                    ),
                ),
                (
                    "content_type",
                    creme.creme_core.models.fields.CTypeForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                        verbose_name="Related type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Custom field",
                "verbose_name_plural": "Custom fields",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="CustomFieldEnumValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=100)),
                (
                    "custom_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customfieldenumvalue_set",
                        to="creme_core.customfield",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Email",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message_subject", models.TextField(null=True)),
                ("message_body", models.TextField(null=True)),
                ("timezone", models.CharField(default="UTC", max_length=100)),
                ("scheduled_date_time", models.DateTimeField(null=True)),
                ("scheduled_later", models.BooleanField(default=False)),
                ("created_on", models.DateTimeField(auto_now=True)),
                ("from_email", models.EmailField(max_length=254)),
                ("rendered_message_body", models.TextField(null=True)),
                (
                    "from_account",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_email",
                        to="creme_core.account",
                    ),
                ),
                (
                    "recipients",
                    models.ManyToManyField(
                        related_name="recieved_email", to="contacts.contact"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmailAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "verified",
                    models.BooleanField(default=False, verbose_name="verified"),
                ),
                ("primary", models.BooleanField(default=False, verbose_name="primary")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "email address",
                "verbose_name_plural": "email addresses",
            },
        ),
        migrations.CreateModel(
            name="EntityFilter",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=100,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "filter_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Credentials filter (internal use)"),
                            (1, "Regular filter (usable in list-view..."),
                        ],
                        default=1,
                        editable=False,
                    ),
                ),
                ("is_custom", models.BooleanField(default=True, editable=False)),
                (
                    "is_private",
                    models.BooleanField(
                        default=False,
                        help_text="A private filter can only be used by its owner (or the teammates if the owner is a team)",
                        verbose_name="Is private?",
                    ),
                ),
                (
                    "use_or",
                    models.BooleanField(
                        choices=[
                            (False, "All the conditions are met"),
                            (True, "Any condition is met"),
                        ],
                        default=False,
                        verbose_name="The entity is accepted if",
                    ),
                ),
                (
                    "entity_type",
                    creme.creme_core.models.fields.CTypeForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    creme.creme_core.models.fields.CremeUserForeignKey(
                        blank=True,
                        help_text="All users can see this filter, but only the owner can edit or delete it",
                        null=True,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owner user",
                    ),
                ),
            ],
            options={
                "verbose_name": "Filter of Entity",
                "verbose_name_plural": "Filters of Entity",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="FieldsConfig",
            fields=[
                (
                    "content_type",
                    creme.creme_core.models.fields.CTypeOneToOneField(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="contenttypes.contenttype",
                    ),
                ),
                ("raw_descriptions", models.JSONField(default=list, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_id",
                    models.CharField(
                        editable=False, max_length=48, verbose_name="Type of job"
                    ),
                ),
                (
                    "enabled",
                    models.BooleanField(
                        default=True, editable=False, verbose_name="Enabled"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        editable=False, max_length=10, verbose_name="Language"
                    ),
                ),
                ("reference_run", models.DateTimeField(verbose_name="Reference run")),
                (
                    "periodicity",
                    creme.creme_core.models.fields.DatePeriodField(
                        null=True, verbose_name="Periodicity"
                    ),
                ),
                (
                    "last_run",
                    models.DateTimeField(
                        editable=False, null=True, verbose_name="Last run"
                    ),
                ),
                ("ack_errors", models.PositiveIntegerField(default=0, editable=False)),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Waiting"),
                            (10, "Error"),
                            (20, "Completed successfully"),
                        ],
                        default=1,
                        editable=False,
                        verbose_name="Status",
                    ),
                ),
                (
                    "error",
                    models.TextField(editable=False, null=True, verbose_name="Error"),
                ),
                ("data", models.JSONField(editable=False, null=True)),
                (
                    "user",
                    creme.creme_core.models.fields.CremeUserForeignKey(
                        editable=False,
                        null=True,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Job",
                "verbose_name_plural": "Jobs",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
            ],
            options={
                "verbose_name": "Language",
                "verbose_name_plural": "Languages",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Mutex",
            fields=[
                (
                    "id",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RelationType",
            fields=[
                (
                    "id",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("is_internal", models.BooleanField(default=False)),
                ("is_custom", models.BooleanField(default=False)),
                ("is_copiable", models.BooleanField(default=True)),
                (
                    "enabled",
                    models.BooleanField(
                        default=True, editable=False, verbose_name="Enabled?"
                    ),
                ),
                ("minimal_display", models.BooleanField(default=False)),
                (
                    "predicate",
                    models.CharField(max_length=100, verbose_name="Predicate"),
                ),
                (
                    "subject_ctypes",
                    models.ManyToManyField(
                        blank=True,
                        related_name="relationtype_subjects_set",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "subject_forbidden_properties",
                    models.ManyToManyField(
                        blank=True,
                        related_name="relationtype_forbidden_set",
                        to="creme_core.cremepropertytype",
                    ),
                ),
                (
                    "subject_properties",
                    models.ManyToManyField(
                        blank=True,
                        related_name="relationtype_subjects_set",
                        to="creme_core.cremepropertytype",
                    ),
                ),
                (
                    "symmetric_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.relationtype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Type of relationship",
                "verbose_name_plural": "Types of relationship",
                "ordering": ("predicate",),
            },
        ),
        migrations.CreateModel(
            name="SettingValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key_id", models.CharField(max_length=100)),
                ("value_str", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="SignupCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(max_length=64, unique=True, verbose_name="code"),
                ),
                (
                    "max_uses",
                    models.PositiveIntegerField(default=1, verbose_name="max uses"),
                ),
                (
                    "expiry",
                    models.DateTimeField(blank=True, null=True, verbose_name="expiry"),
                ),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "sent",
                    models.DateTimeField(blank=True, null=True, verbose_name="sent"),
                ),
                (
                    "created",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "use_count",
                    models.PositiveIntegerField(
                        default=0, editable=False, verbose_name="use count"
                    ),
                ),
                (
                    "inviter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "signup code",
                "verbose_name_plural": "signup codes",
            },
        ),
        migrations.CreateModel(
            name="Tags",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20)),
                ("slug", models.CharField(blank=True, max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Vat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("20.0"),
                        max_digits=4,
                        verbose_name="VAT",
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="Is default?"),
                ),
            ],
            options={
                "verbose_name": "VAT",
                "verbose_name_plural": "VAT",
                "ordering": ("value",),
            },
        ),
        migrations.CreateModel(
            name="Version",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="TrashCleaningCommand",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_count",
                    models.PositiveIntegerField(default=0, editable=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="Name"),
                ),
                ("raw_allowed_apps", models.TextField(default="")),
                ("raw_admin_4_apps", models.TextField(default="")),
                (
                    "creatable_ctypes",
                    models.ManyToManyField(
                        related_name="roles_allowing_creation",
                        to="contenttypes.contenttype",
                        verbose_name="Creatable resources",
                    ),
                ),
                (
                    "exportable_ctypes",
                    models.ManyToManyField(
                        related_name="roles_allowing_export",
                        to="contenttypes.contenttype",
                        verbose_name="Exportable resources",
                    ),
                ),
            ],
            options={
                "verbose_name": "Role",
                "verbose_name_plural": "Roles",
            },
        ),
        migrations.CreateModel(
            name="SignupCodeResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "signup_code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.signupcode",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SetCredentials",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.PositiveSmallIntegerField()),
                (
                    "set_type",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "All entities"),
                            (2, "User's own entities"),
                            (3, "Filtered entities"),
                        ],
                        default=1,
                        help_text="The choice «Filtered entities» allows to configure credentials based on values of fields or relationships for example.",
                        verbose_name="Type of entities set",
                    ),
                ),
                (
                    "forbidden",
                    models.BooleanField(
                        choices=[
                            (
                                False,
                                "The users are allowed to perform the selected actions",
                            ),
                            (
                                True,
                                "The users are NOT allowed to perform the selected actions",
                            ),
                        ],
                        default=False,
                        help_text="Notice that actions which are forbidden & allowed at the same time are considered as forbidden when final permissions are computed.",
                        verbose_name="Allow or forbid?",
                    ),
                ),
                (
                    "ctype",
                    creme.creme_core.models.fields.EntityCTypeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                        verbose_name="Apply to a specific type",
                    ),
                ),
                (
                    "efilter",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="creme_core.entityfilter",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="credentials",
                        to="creme_core.userrole",
                        verbose_name="Role",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SemiFixedRelationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "predicate",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Predicate"
                    ),
                ),
                (
                    "object_ctype",
                    creme.creme_core.models.fields.EntityCTypeForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "object_entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.cremeentity",
                    ),
                ),
                (
                    "relation_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.relationtype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Semi-fixed type of relationship",
                "verbose_name_plural": "Semi-fixed types of relationship",
                "ordering": ("predicate",),
            },
        ),
        migrations.CreateModel(
            name="SearchConfigItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "superuser",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        verbose_name="related to superusers",
                    ),
                ),
                (
                    "disabled",
                    models.BooleanField(default=False, verbose_name="Disabled?"),
                ),
                ("json_cells", models.JSONField(default=list, editable=False)),
                (
                    "content_type",
                    creme.creme_core.models.fields.EntityCTypeForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                        verbose_name="Related resource",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.userrole",
                        verbose_name="Related role",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Sandbox",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "type_id",
                    models.CharField(
                        editable=False, max_length=48, verbose_name="Type of sandbox"
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.userrole",
                        verbose_name="Related role",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Related user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RelationBrickItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("json_cells_map", models.JSONField(default=dict, editable=False)),
                (
                    "relation_type",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.relationtype",
                        verbose_name="Related type of relationship",
                    ),
                ),
            ],
            bases=(creme.creme_core.models.bricks.StoredBrickClassMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Relation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    creme.creme_core.models.fields.CreationDateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="Creation date",
                    ),
                ),
                (
                    "object_ctype",
                    creme.creme_core.models.fields.EntityCTypeForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "object_entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="relations_where_is_object",
                        to="creme_core.cremeentity",
                    ),
                ),
                (
                    "subject_entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="relations",
                        to="creme_core.cremeentity",
                    ),
                ),
                (
                    "symmetric_relation",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.relation",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.relationtype",
                    ),
                ),
                (
                    "user",
                    creme.creme_core.models.fields.CremeUserForeignKey(
                        to=settings.AUTH_USER_MODEL, verbose_name="Owner user"
                    ),
                ),
            ],
            options={
                "verbose_name": "Relationship",
                "verbose_name_plural": "Relationships",
            },
        ),
        migrations.CreateModel(
            name="PasswordHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=255)),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="password_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "password history",
                "verbose_name_plural": "password histories",
            },
        ),
        migrations.CreateModel(
            name="PasswordExpiry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("expiry", models.PositiveIntegerField(default=0)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="password_expiry",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MenuConfigItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "superuser",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        verbose_name="related to superusers",
                    ),
                ),
                ("entry_id", models.CharField(editable=False, max_length=100)),
                ("order", models.PositiveIntegerField(editable=False)),
                ("entry_data", models.JSONField(default=dict, editable=False)),
                (
                    "parent",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="creme_core.menuconfigitem",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.userrole",
                    ),
                ),
            ],
            options={
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="MassImportJobResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("messages", models.JSONField(null=True)),
                ("line", models.JSONField(default=list)),
                ("updated", models.BooleanField(default=False)),
                (
                    "entity",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.cremeentity",
                    ),
                ),
                (
                    "entity_ctype",
                    creme.creme_core.models.fields.EntityCTypeForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="creme_core.job"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="JobResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("messages", models.JSONField(null=True)),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="creme_core.job"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InstanceBrickConfigItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "brick_class_id",
                    models.CharField(
                        editable=False, max_length=300, verbose_name="Block class ID"
                    ),
                ),
                ("json_extra_data", models.JSONField(default=dict, editable=False)),
                (
                    "entity",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.cremeentity",
                        verbose_name="Block related entity",
                    ),
                ),
            ],
            options={
                "ordering": ("id",),
            },
            bases=(creme.creme_core.models.bricks.StoredBrickClassMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Imprint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="imprints",
                        to="creme_core.cremeentity",
                    ),
                ),
                (
                    "entity_ctype",
                    creme.creme_core.models.fields.EntityCTypeForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="imprints",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoryLine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(max_length=30)),
                (
                    "date",
                    creme.creme_core.models.fields.CreationDateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="Date",
                    ),
                ),
                ("type", models.PositiveSmallIntegerField(verbose_name="Type")),
                ("value", models.TextField(null=True)),
                (
                    "entity",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="creme_core.cremeentity",
                    ),
                ),
                (
                    "entity_ctype",
                    creme.creme_core.models.fields.CTypeForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "entity_owner",
                    creme.creme_core.models.fields.CremeUserForeignKey(
                        to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "verbose_name": "Line of history",
                "verbose_name_plural": "Lines of history",
            },
        ),
        migrations.CreateModel(
            name="HistoryConfigItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "relation_type",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.relationtype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HeaderFilter",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=100,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Name of the view"),
                ),
                ("is_custom", models.BooleanField(default=True, editable=False)),
                (
                    "is_private",
                    models.BooleanField(default=False, verbose_name="Is private?"),
                ),
                ("json_cells", models.TextField(editable=False, null=True)),
                (
                    "entity_type",
                    creme.creme_core.models.fields.CTypeForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    creme.creme_core.models.fields.CremeUserForeignKey(
                        blank=True,
                        null=True,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owner user",
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Google",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("google_id", models.CharField(default="", max_length=200)),
                ("google_url", models.TextField(default="")),
                ("verified_email", models.CharField(default="", max_length=200)),
                ("family_name", models.CharField(default="", max_length=200)),
                ("name", models.CharField(default="", max_length=200)),
                ("gender", models.CharField(default="", max_length=10)),
                ("dob", models.CharField(default="", max_length=50)),
                ("given_name", models.CharField(default="", max_length=200)),
                ("email", models.CharField(db_index=True, default="", max_length=200)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="google_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FileRef",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("filedata", models.FileField(max_length=200, upload_to="")),
                ("basename", models.CharField(max_length=200)),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "temporary",
                    models.BooleanField(default=True, verbose_name="Is temporary?"),
                ),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                (
                    "user",
                    creme.creme_core.models.fields.CremeUserForeignKey(
                        null=True,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owner user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EntityJobResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("messages", models.JSONField(null=True)),
                (
                    "entity",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.cremeentity",
                    ),
                ),
                (
                    "entity_ctype",
                    creme.creme_core.models.fields.EntityCTypeForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="creme_core.job"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EntityFilterCondition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.PositiveSmallIntegerField()),
                ("name", models.CharField(max_length=100)),
                ("raw_value", models.TextField()),
                (
                    "filter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conditions",
                        to="creme_core.entityfilter",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmailLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_sent", models.BooleanField(default=False)),
                (
                    "contact",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contact_email_log",
                        to="contacts.contact",
                    ),
                ),
                (
                    "email",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="email_log",
                        to="creme_core.email",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmailConfirmation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("sent", models.DateTimeField(null=True)),
                ("key", models.CharField(max_length=64, unique=True)),
                (
                    "email_address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.emailaddress",
                    ),
                ),
            ],
            options={
                "verbose_name": "email confirmation",
                "verbose_name_plural": "email confirmations",
            },
        ),
        migrations.CreateModel(
            name="DeletionCommand",
            fields=[
                (
                    "content_type",
                    creme.creme_core.models.fields.CTypeOneToOneField(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="contenttypes.contenttype",
                    ),
                ),
                ("pk_to_delete", models.TextField(editable=False)),
                ("deleted_repr", models.TextField(editable=False)),
                ("json_replacers", models.JSONField(default=list, editable=False)),
                ("total_count", models.PositiveIntegerField(default=0, editable=False)),
                (
                    "updated_count",
                    models.PositiveIntegerField(default=0, editable=False),
                ),
                (
                    "job",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.job",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DateReminder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_of_remind", models.DateTimeField(blank=True, null=True)),
                ("ident", models.PositiveIntegerField()),
                ("model_id", models.PositiveIntegerField()),
                (
                    "model_content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reminders_set",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Reminder",
                "verbose_name_plural": "Reminders",
            },
        ),
        migrations.CreateModel(
            name="CustomFormConfigItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descriptor_id",
                    models.CharField(
                        editable=False, max_length=100, verbose_name="Type of form"
                    ),
                ),
                ("json_groups", models.JSONField(default=list, editable=False)),
                (
                    "superuser",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        verbose_name="related to superusers",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.userrole",
                        verbose_name="Related role",
                    ),
                ),
            ],
            options={
                "verbose_name": "Custom form",
                "verbose_name_plural": "Custom forms",
            },
        ),
        migrations.CreateModel(
            name="CustomFieldURL",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.URLField()),
                (
                    "custom_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.customfield",
                    ),
                ),
                (
                    "entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.cremeentity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomFieldText",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.TextField()),
                (
                    "custom_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.customfield",
                    ),
                ),
                (
                    "entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.cremeentity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomFieldString",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=100)),
                (
                    "custom_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.customfield",
                    ),
                ),
                (
                    "entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.cremeentity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomFieldMultiEnum",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "custom_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.customfield",
                    ),
                ),
                (
                    "entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.cremeentity",
                    ),
                ),
                ("value", models.ManyToManyField(to="creme_core.customfieldenumvalue")),
            ],
        ),
        migrations.CreateModel(
            name="CustomFieldInteger",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.IntegerField()),
                (
                    "custom_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.customfield",
                    ),
                ),
                (
                    "entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.cremeentity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomFieldFloat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "custom_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.customfield",
                    ),
                ),
                (
                    "entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.cremeentity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomFieldEnum",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "custom_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.customfield",
                    ),
                ),
                (
                    "entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.cremeentity",
                    ),
                ),
                (
                    "value",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.customfieldenumvalue",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomFieldDateTime",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.DateTimeField()),
                (
                    "custom_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.customfield",
                    ),
                ),
                (
                    "entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.cremeentity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomFieldDate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.DateField()),
                (
                    "custom_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.customfield",
                    ),
                ),
                (
                    "entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.cremeentity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomFieldBoolean",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.BooleanField(default=False)),
                (
                    "custom_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.customfield",
                    ),
                ),
                (
                    "entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.cremeentity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomBrickConfigItem",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=100,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                ("json_cells", models.JSONField(default=list, editable=False)),
                (
                    "content_type",
                    creme.creme_core.models.fields.CTypeForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                        verbose_name="Related type",
                    ),
                ),
            ],
            bases=(creme.creme_core.models.bricks.StoredBrickClassMixin, models.Model),
        ),
        migrations.CreateModel(
            name="CremeProperty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "creme_entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="properties",
                        to="creme_core.cremeentity",
                        verbose_name="Entity",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.cremepropertytype",
                        verbose_name="Type of property",
                    ),
                ),
            ],
            options={
                "verbose_name": "Property",
                "verbose_name_plural": "Properties",
            },
        ),
        migrations.AddField(
            model_name="cremeentity",
            name="sandbox",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="creme_core.sandbox",
            ),
        ),
        migrations.AddField(
            model_name="cremeentity",
            name="user",
            field=creme.creme_core.models.fields.CremeUserForeignKey(
                to=settings.AUTH_USER_MODEL, verbose_name="Owner user"
            ),
        ),
        migrations.CreateModel(
            name="ButtonMenuItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "button_id",
                    models.CharField(max_length=100, verbose_name="Button ID"),
                ),
                ("order", models.PositiveIntegerField(verbose_name="Priority")),
                (
                    "content_type",
                    creme.creme_core.models.fields.CTypeForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                        verbose_name="Related type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Button to display",
                "verbose_name_plural": "Buttons to display",
            },
        ),
        migrations.CreateModel(
            name="BrickState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("brick_id", models.CharField(max_length=100, verbose_name="Block ID")),
                ("is_open", models.BooleanField(default=True)),
                ("show_empty_fields", models.BooleanField(default=True)),
                ("json_extra_data", models.JSONField(default=dict, editable=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BrickMypageLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("brick_id", models.CharField(max_length=100)),
                ("order", models.PositiveIntegerField()),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="BrickHomeLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "superuser",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        verbose_name="related to superusers",
                    ),
                ),
                ("brick_id", models.CharField(max_length=100)),
                ("order", models.PositiveIntegerField()),
                (
                    "role",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.userrole",
                        verbose_name="Related role",
                    ),
                ),
            ],
            options={
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="BrickDetailviewLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "superuser",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        verbose_name="related to superusers",
                    ),
                ),
                ("brick_id", models.CharField(max_length=100)),
                ("order", models.PositiveIntegerField()),
                ("zone", models.PositiveSmallIntegerField()),
                (
                    "content_type",
                    creme.creme_core.models.fields.CTypeForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                        verbose_name="Related type",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creme_core.userrole",
                        verbose_name="Related role",
                    ),
                ),
            ],
            options={
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="Attachments",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_name", models.CharField(max_length=60)),
                (
                    "created_on",
                    models.DateTimeField(auto_now=True, verbose_name="Created on"),
                ),
                (
                    "attachment",
                    models.FileField(max_length=1001, upload_to="attachments/%Y/%m/"),
                ),
                (
                    "account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account_attachment",
                        to="creme_core.account",
                    ),
                ),
                (
                    "case",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="case_attachment",
                        to="cases.case",
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contact_attachment",
                        to="contacts.contact",
                    ),
                ),
            ],
        ),
    ]
