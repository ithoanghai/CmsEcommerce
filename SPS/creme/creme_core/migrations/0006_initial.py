# Generated by Django 4.2.6 on 2023-10-13 14:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("creme_core", "0005_initial"),
        ("tasks", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
        ("userprofile", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="attachments",
            name="task",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tasks_attachment",
                to="tasks.task",
            ),
        ),
        migrations.AddField(
            model_name="apisettings",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="settings_created_by",
                to="userprofile.profile",
            ),
        ),
        migrations.AddField(
            model_name="apisettings",
            name="lead_assigned_to",
            field=models.ManyToManyField(
                related_name="lead_assignee_users", to="userprofile.profile"
            ),
        ),
        migrations.AddField(
            model_name="apisettings",
            name="org",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="org_api_settings",
                to="userprofile.org",
            ),
        ),
        migrations.AddField(
            model_name="apisettings",
            name="tags",
            field=models.ManyToManyField(blank=True, to="creme_core.tags"),
        ),
        migrations.AddField(
            model_name="accountdeletion",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="account",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="account",
                to=settings.AUTH_USER_MODEL,
                verbose_name="user",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="teammates_set",
            field=models.ManyToManyField(
                related_name="teams_set",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Teammates",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AddField(
            model_name="trashcleaningcommand",
            name="job",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                to="creme_core.job",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="semifixedrelationtype",
            unique_together={("relation_type", "object_entity")},
        ),
        migrations.AlterUniqueTogether(
            name="searchconfigitem",
            unique_together={("content_type", "role", "superuser")},
        ),
        migrations.AlterUniqueTogether(
            name="relation",
            unique_together={("type", "subject_entity", "object_entity")},
        ),
        migrations.AddIndex(
            model_name="historyline",
            index=models.Index(
                fields=["entity_id", "-id"], name="hline__entity_detailview"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="customformconfigitem",
            unique_together={("descriptor_id", "role")},
        ),
        migrations.AlterUniqueTogether(
            name="customfield",
            unique_together={("content_type", "name")},
        ),
        migrations.AlterUniqueTogether(
            name="cremeproperty",
            unique_together={("type", "creme_entity")},
        ),
        migrations.AddIndex(
            model_name="cremeentity",
            index=models.Index(
                fields=["entity_type", "is_deleted"], name="core__entity__basic_count"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="brickstate",
            unique_together={("user", "brick_id")},
        ),
    ]
