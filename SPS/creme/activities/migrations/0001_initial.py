# Generated by Django 4.2.6 on 2023-10-13 14:33

import creme.creme_core.models.deletion
import creme.creme_core.models.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("creme_core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ActivityType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "default_day_duration",
                    models.IntegerField(default=0, verbose_name="Default day duration"),
                ),
                (
                    "default_hour_duration",
                    creme.creme_core.models.fields.DurationField(
                        max_length=15, verbose_name="Default hour duration"
                    ),
                ),
                ("is_custom", models.BooleanField(default=True, editable=False)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
            ],
            options={
                "verbose_name": "Type of activity",
                "verbose_name_plural": "Types of activity",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Status",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("is_custom", models.BooleanField(default=True)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "color",
                    creme.creme_core.models.fields.ColorField(
                        default=creme.creme_core.models.fields.ColorField.random,
                        max_length=6,
                        verbose_name="Color",
                    ),
                ),
            ],
            options={
                "verbose_name": "Status of activity",
                "verbose_name_plural": "Status of activity",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="UserState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Calendar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "is_default",
                    models.BooleanField(
                        default=False,
                        help_text="When a user is set as an Activity's participant, this Activity is added to its default calendar.",
                        verbose_name="Is default?",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False,
                        help_text="Public calendars can be seen by other users on the calendar view.",
                        verbose_name="Is public?",
                    ),
                ),
                (
                    "color",
                    creme.creme_core.models.fields.ColorField(
                        default=creme.creme_core.models.fields.ColorField.random,
                        help_text="It is used on the calendar view to colorize Activities.",
                        max_length=6,
                        verbose_name="Color",
                    ),
                ),
                ("is_custom", models.BooleanField(default=True, editable=False)),
                (
                    "user",
                    creme.creme_core.models.fields.CremeUserForeignKey(
                        to=settings.AUTH_USER_MODEL, verbose_name="Calendar owner"
                    ),
                ),
            ],
            options={
                "verbose_name": "Calendar",
                "verbose_name_plural": "Calendars",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ActivitySubType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                ("is_custom", models.BooleanField(default=True, editable=False)),
                ("extra_data", models.JSONField(default=dict, editable=False)),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="activities.activitytype",
                        verbose_name="Type of activity",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sub-type of activity",
                "verbose_name_plural": "Sub-types of activity",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="ActivityState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("activity_key", models.CharField(max_length=300)),
                ("activity_class_path", models.CharField(max_length=300)),
                ("completed_count", models.IntegerField(default=0)),
                ("data", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "activity_key")},
            },
        ),
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "cremeentity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="creme_core.cremeentity",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="Title")),
                (
                    "start",
                    models.DateTimeField(blank=True, null=True, verbose_name="Start"),
                ),
                (
                    "end",
                    models.DateTimeField(blank=True, null=True, verbose_name="End"),
                ),
                ("minutes", models.TextField(blank=True, verbose_name="Minutes")),
                (
                    "place",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Activity place"
                    ),
                ),
                (
                    "duration",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="It is only informative and is not used to compute the end time.",
                        null=True,
                        verbose_name="Duration (in hour)",
                    ),
                ),
                (
                    "is_all_day",
                    models.BooleanField(default=False, verbose_name="All day?"),
                ),
                ("busy", models.BooleanField(default=False, verbose_name="Busy?")),
                (
                    "floating_type",
                    models.PositiveIntegerField(
                        default=1, editable=False, verbose_name="Floating type"
                    ),
                ),
                (
                    "calendars",
                    models.ManyToManyField(
                        editable=False,
                        to="activities.calendar",
                        verbose_name="Calendars",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=creme.creme_core.models.deletion.CREME_REPLACE_NULL,
                        to="activities.status",
                        verbose_name="Status",
                    ),
                ),
                (
                    "sub_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="activities.activitysubtype",
                        verbose_name="Activity sub-type",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="activities.activitytype",
                        verbose_name="Activity type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Activity",
                "verbose_name_plural": "Activities",
                "ordering": ("-start",),
                "abstract": False,
                "swappable": "ACTIVITIES_ACTIVITY_MODEL",
            },
            bases=("creme_core.cremeentity",),
        ),
        migrations.CreateModel(
            name="ActivitySessionState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("started", models.DateTimeField(default=django.utils.timezone.now)),
                ("completed", models.DateTimeField(null=True)),
                ("data", models.JSONField(blank=True, default=dict)),
                (
                    "activity_state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to="activities.activitystate",
                    ),
                ),
            ],
            options={
                "unique_together": {("activity_state", "started")},
            },
        ),
    ]
